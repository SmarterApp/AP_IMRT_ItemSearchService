version: '3'
services:
    configuration-service:
        container_name: configuration-service
        image: @dockerTagBase@/configuration-service:@configServerVersion@
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:8888/health"]
          interval: 30s
          timeout: 5s
          retries: 3
        environment:
          CONFIG_SERVICE_REPO: "file://tmp"
          SPRING_CLOUD_BUS_ENABLED: "false"
          MANAGEMENT_HEALTH_RABBIT_ENABLED: "false"
        expose:
            - 8888
        ports:
            - 8888:8888
        networks:
            - spring-cloud-network
        volumes:
            - @USER_HOME@/sbac/imrt-config-repo:/tmp
        logging:
            driver: json-file
    ap-imrt-iss-service:
        container_name: ap-imrt-iss-service
        image: @dockerTagBase@/ap-imrt-iss:@version@
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:8008/health"]
          interval: 30s
          timeout: 5s
          retries: 3
        environment:
            CONFIG_SERVICE_ENABLED: "true"
            CONFIG_SERVICE_URL: "http://configuration-service:8888"
            SPRING_DATASOURCE_URL: "jdbc:postgresql://docker.for.mac.host.internal:5432/imrt"
            SPRING_DATASOURCE_USERNAME:
            SPRING_DATASOURCE_PASSWORD:
        ports:
            - 9080:9080
            - 9008:9008
        networks:
            - spring-cloud-network
        depends_on:
            - configuration-service
        logging:
            driver: json-file

networks:
    spring-cloud-network:
        driver: bridge

