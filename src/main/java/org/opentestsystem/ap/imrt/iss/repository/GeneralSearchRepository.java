package org.opentestsystem.ap.imrt.iss.repository;

import org.opentestsystem.ap.imrt.iss.dto.ItemDto;
import org.opentestsystem.ap.imrt.iss.dto.search.PageDto;
import org.opentestsystem.ap.imrt.iss.dto.search.SearchProperty;
import org.opentestsystem.ap.imrt.iss.dto.search.Sort;
import org.opentestsystem.ap.imrt.iss.model.SearchFilter;

import java.util.List;
import java.util.Map;

/**
 * Handles general search datastore queries
 */
public interface GeneralSearchRepository {
    /**
     * Search for the slice of {@link ItemDto} which match the search
     *
     * @param pageDto       {@link PageDto} containing page information for slice
     * @param sorts         the {@link Sort} to apply to the query
     * @param searchFilters the {@link SearchFilter} list for search criteria
     * @return slice of {@link ItemDto} based on search criteria
     */
    List<ItemDto> findSlice(final PageDto pageDto, final List<Sort> sorts, final List<SearchFilter> searchFilters);

    /**
     * Get the total number of items based on search filters
     *
     * @param searchFilters the {@link SearchFilter} list for search criteria
     * @return the total number of items with search filter criteria
     */
    int getTotalItemsCount(final List<SearchFilter> searchFilters);

    /**
     * Gets the counts for a particular item {@link SearchProperty}
     *
     * @param property      the {@link SearchProperty} to get counts for
     * @param searchFilters The {@link SearchFilter} to filter items available for the counts.
     * @return the counts
     */
    Map<String, Long> getGroupCounts(final SearchProperty property, final List<SearchFilter> searchFilters);
}
