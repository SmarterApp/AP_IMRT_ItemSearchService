package org.opentestsystem.ap.imrt.iss.dto.search;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.Optional;

/**
 * Filter that allows for ranged integer filter
 */
public class IntegerRangeFilter extends Filter {
    private static final String TYPE = "integerRange";
    private final Integer min;
    private final Integer max;

    @JsonCreator
    public IntegerRangeFilter(@JsonProperty("property") final String property,
                              @JsonProperty("includeBlanks") final boolean includeBlanks,
                              @JsonProperty("min") final Integer min,
                              @JsonProperty("max") final Integer max) {
        super(property, includeBlanks);

        if (min != null && max != null && min > max) {
            throw new IllegalArgumentException("min value cannot be greater than max value");
        }

        this.min = min;
        this.max = max;
    }

    @Override
    public String getType() {
        return TYPE;
    }

    /**
     * @return the min value
     */
    public Optional<Integer> getMin() {
        return Optional.ofNullable(min);
    }

    /**
     * @return the max value
     */
    public Optional<Integer> getMax() {
        return Optional.ofNullable(max);
    }

    @Override
    public String toString() {
        return String.format("IntegerRangeFilter{property='%s', min=%d, max=%d}",
                getSearchProperty(),
                min,
                max);
    }
}
