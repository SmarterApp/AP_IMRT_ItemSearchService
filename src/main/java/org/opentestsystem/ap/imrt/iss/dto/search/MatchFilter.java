package org.opentestsystem.ap.imrt.iss.dto.search;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.List;
import java.util.stream.Collectors;

import static org.opentestsystem.ap.imrt.iss.util.Preconditions.checkNotNull;

/**
 * A filter that will equality match values
 */
public class MatchFilter extends Filter {
    static final String TYPE = "match";

    private final List<String> values;

    @JsonCreator
    public MatchFilter(@JsonProperty("property") final String property, @JsonProperty("values") final List<String> values) {
        super(property);
        this.values = checkNotNull(values);
    }

    @Override
    public String getType() {
        return TYPE;
    }

    /**
     * @return the list of values to match filter
     */
    public List<String> getValues() {
        if(!values.isEmpty()
                && (ITEM_ID.equals(getProperty()) || STIMULUS_ID.equals(getProperty()))) {
            return sanitizeIdValues(values);
        }

        return values;
    }

    @Override
    public boolean isEmpty() {
        return values.isEmpty();
    }

    @Override
    public String toString() {
        return String.format("MatchFilter{property='%s', values=%s}",
                getProperty(),
                values);
    }

    @Override
    public boolean containsValidValues() {
        if(values.isEmpty()) {
            return true;
        }

        if (!ITEM_ID.equals(getProperty()) && !STIMULUS_ID.equals(getProperty())) {
            return true;
        }

        return !sanitizeIdValues(values).isEmpty();
    }

    private List<String> sanitizeIdValues(final List<String> ids) {
        return ids.stream()
                .filter(MatchFilter::isInteger)
                .collect(Collectors.toList());
    }

    private static boolean isInteger(String str) {
        if (str == null) {
            return false;
        }
        int length = str.length();
        if (length == 0) {
            return false;
        }
        int i = 0;
        if (str.charAt(0) == '-') {
            if (length == 1) {
                return false;
            }
            i = 1;
        }
        for (; i < length; i++) {
            char c = str.charAt(i);
            if (c < '0' || c > '9') {
                return false;
            }
        }
        return true;
    }
}
