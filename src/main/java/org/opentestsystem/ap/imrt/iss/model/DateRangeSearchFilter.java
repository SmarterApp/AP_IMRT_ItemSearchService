package org.opentestsystem.ap.imrt.iss.model;

import com.google.common.annotations.VisibleForTesting;
import org.apache.commons.lang.StringUtils;
import org.opentestsystem.ap.imrt.iss.dto.search.SearchProperty;

import java.sql.Timestamp;
import java.time.Instant;
import java.util.HashMap;
import java.util.Map;

/**
 * Handles date range filtering
 */
public class DateRangeSearchFilter extends AbstractSearchFilter implements SearchFilter {
    private final Instant to;
    private final Instant from;

    public DateRangeSearchFilter(final SearchProperty filterProperty, final Instant to, final Instant from) {
        this(filterProperty, to, from, false);
    }

    public DateRangeSearchFilter(final SearchProperty filterProperty, final Instant to, final Instant from, boolean includeBlanks) {
        super(filterProperty, includeBlanks);
        this.to = to;
        this.from = from;
    }

    @Override
    public boolean isEmpty() {
        return to == null && from == null || isIncludeBlanks();
    }

    @Override
    public boolean isValid() {
        return true;
    }

    @VisibleForTesting
    Instant getTo() {
        return to;
    }

    @VisibleForTesting
    Instant getFrom() {
        return from;
    }

    @Override
    public FilterQuery getFilterQuery() {
        Map<String, Object> parameters = new HashMap<>();
        String sql = "";

        String fromParameter = getFilterProperty().getProperty() + "From";
        String toParameter = getFilterProperty().getProperty() + "To";

        if (from != null && to == null) {
            sql = getFilterProperty().getColumnName() + " >= :" + fromParameter;
            parameters.put(fromParameter, Timestamp.from(from));
        } else if (to != null && from == null) {
            sql = getFilterProperty().getColumnName() + " <= :" + toParameter;
            parameters.put(toParameter, Timestamp.from(to));
        } else if (to != null) {
            sql = getFilterProperty().getColumnName() + " between :" + toParameter + " AND :" + fromParameter;
            parameters.put(toParameter, Timestamp.from(to));
            parameters.put(fromParameter, Timestamp.from(from));
        }

        if (StringUtils.isNotBlank(sql) && isIncludeBlanks()) {
            sql = sql + " OR " + getFilterProperty().getColumnName() + " IS NULL ";
        } else if (isIncludeBlanks()) {
            sql = getFilterProperty().getColumnName() + " IS NULL ";
        }

        return new FilterQuery(sql, parameters);
    }
}