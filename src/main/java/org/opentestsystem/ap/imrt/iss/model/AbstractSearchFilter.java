package org.opentestsystem.ap.imrt.iss.model;

import org.opentestsystem.ap.imrt.iss.dto.search.SearchProperty;

import java.util.Optional;

/**
 * Abstract search filter containing filter type which is required for all filters
 */
public abstract class AbstractSearchFilter implements SearchFilter {
    private final SearchProperty searchProperty;
    private final boolean includeBlanks;

    public AbstractSearchFilter(final String filterProperty) {
        this(filterProperty, false);
    }

    public AbstractSearchFilter(final String searchProperty, final boolean includeBlanks) {
        Optional<SearchProperty> maybeSearchProperty = SearchProperty.propertyValueOf(searchProperty);

        if (!maybeSearchProperty.isPresent()) {
            throw new IllegalArgumentException("Invalid search property provided: " + searchProperty);
        }

        this.searchProperty = maybeSearchProperty.get();
        this.includeBlanks = includeBlanks;
    }

    @Override
    public SearchProperty getFilterProperty() {
        return searchProperty;
    }

    /**
     * @return {@code true} if values not set should be included
     */
    public boolean isIncludeBlanks() {
        return includeBlanks;
    }
}
