package org.opentestsystem.ap.imrt.iss.service;

import org.opentestsystem.ap.imrt.iss.dto.ItemSearchResult;
import org.opentestsystem.ap.imrt.iss.dto.SearchResults;
import org.opentestsystem.ap.imrt.iss.dto.search.PageDto;
import org.opentestsystem.ap.imrt.iss.dto.search.SearchProperty;
import org.opentestsystem.ap.imrt.iss.dto.search.Sort;
import org.opentestsystem.ap.imrt.iss.model.SearchFilter;
import org.opentestsystem.ap.imrt.iss.model.SearchPermissions;

import java.util.List;
import java.util.Map;
import java.util.Optional;

/**
 * Handles item searches
 */
public interface ItemSearchService {
    /**
     * Search for items
     *
     * @param filters list of {@link SearchFilter} to apply
     * @param sort    {@link Sort} used to determine ordering
     * @param pageDto {@link PageDto} containing the page parameters for the search
     *                <p>
     *                return empty
     */
    SearchResults<ItemSearchResult> searchItems(SearchPermissions searchPermissions,
                                                List<SearchFilter> filters,
                                                Sort sort,
                                                PageDto pageDto);

    /**
     * Get the counts for a particular field
     *
     * @param filters list of {@link SearchFilter} to apply
     * @param groupBy the field to group by
     * @return {@link Map<String, Long>} where key is the groupBy value and the long is the count of records matching
     * the group by
     */
    Optional<Map<String, Long>> getCounts(SearchPermissions searchPermissions,
                                          List<SearchFilter> filters,
                                          SearchProperty groupBy);
}
