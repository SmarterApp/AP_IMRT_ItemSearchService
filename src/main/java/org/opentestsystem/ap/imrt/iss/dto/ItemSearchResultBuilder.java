package org.opentestsystem.ap.imrt.iss.dto;

import java.time.Instant;

import static org.apache.commons.lang3.StringUtils.EMPTY;

@SuppressWarnings("unchecked")
public class ItemSearchResultBuilder<B extends ItemSearchResultBuilder> {
    private String id = EMPTY;
    private String subject = EMPTY;
    private String intendedGrade = EMPTY;
    private String workflowStatus = EMPTY;
    private String type = EMPTY;
    private String depthOfKnowledge = EMPTY;
    private String createdBy = EMPTY;
    private Instant createDate;
    private String stimulusId = EMPTY;
    private String beingCreated = EMPTY;
    private String organizationTypeId = EMPTY;
    private String organizationName = EMPTY;
    private String contentTaskModel = EMPTY;
    private Instant workflowStatusUpdatedDate;
    private String itemAuthor = EMPTY;
    //Standard Alignment Information
    private String primaryClaim = EMPTY;
    private String primaryTarget = EMPTY;
    private String primaryContentDomain = EMPTY;
    private String primaryCommonCoreStandard = EMPTY;
    private String secondaryClaim = EMPTY;
    private String secondaryTarget = EMPTY;
    private String secondaryContentDomain = EMPTY;
    private String secondaryCommonCoreStandard = EMPTY;
    private String tertiaryClaim = EMPTY;
    private String tertiaryTarget = EMPTY;
    private String tertiaryContentDomain = EMPTY;
    private String tertiaryCommonCoreStandard = EMPTY;
    private String quaternaryClaim = EMPTY;
    private String quaternaryTarget = EMPTY;
    private String quaternaryContentDomain = EMPTY;
    private String quaternaryCommonCoreStandard = EMPTY;
    private Instant englishContentLastUpdatedDate;
    private Instant spanishContentLastUpdatedDate;
    private Instant updateDate;
    //TODO - Check with client about this date
    private Instant fieldTestDate;
    private String aslProvided = EMPTY;
    private String aslRequired = EMPTY;
    private String brailleProvided = EMPTY;
    private String brailleRequired = EMPTY;
    private String closedCaptioningProvided = EMPTY;
    private String closedCaptioningRequired = EMPTY;
    private String allowCalculator = EMPTY;
    private String translationProvided = EMPTY;
    private String translationRequired = EMPTY;
    private String itemDifficultyQuintile = EMPTY;
    private String performanceTask = EMPTY;
    private String testCategory = EMPTY;
    private String writingPurpose = EMPTY;
    private String scoringEngine = EMPTY;
    private String associatedItemCount = EMPTY;
    private String aslUploadedPriorToLastContentUpdate = EMPTY;
    private String brailleUploadedPriorToLastContentUpdate = EMPTY;
    private String closedCaptioningUploadedPriorToLastContentUpdate = EMPTY;
    private String calculatedFormCount = EMPTY;
    private String calculatedExposuresCount = EMPTY;
    private String sightTtsProvided = EMPTY;
    private String visualTtsProvided = EMPTY;
    private String visualTtsRequired = EMPTY;
    private String englishPassagesCount = EMPTY;
    private String spanishPassagesCount = EMPTY;
    private String contentChangedAfterOperational = EMPTY;
    private String unresolvedUpdateNeed = EMPTY;
    private Instant currentUpdateNeedCreatedDate;
    private Instant currentUpdateNeedResolutionDate;
    private Instant currentUpdateNeedInternalResolutionDate;
    private String currentUpdateNeedResolution = EMPTY;
    private String currentUpdateNeedInternalResolution = EMPTY;
    private boolean englishGlossaryProvided;
    private boolean illustratedGlossaryProvided;
    private String illustratedGlossaryRequired = EMPTY;
    private boolean translatedGlossaryProvided;
    private String translatedGlossaryRequired = EMPTY;

    protected ItemSearchResultBuilder() {
    }

    public static ItemSearchResultBuilder anItemSearchResultBuilder() {
        return new ItemSearchResultBuilder();
    }

    public B withId(String id) {
        this.id = id;
        return (B) this;
    }

    public B withSubject(String subject) {
        this.subject = subject;
        return (B) this;
    }

    public B withIntendedGrade(String intendedGrade) {
        this.intendedGrade = intendedGrade;
        return (B) this;
    }

    public B withWorkflowStatus(String workflowStatus) {
        this.workflowStatus = workflowStatus;
        return (B) this;
    }

    public B withType(String type) {
        this.type = type;
        return (B) this;
    }

    public B withDepthOfKnowledge(String depthOfKnowledge) {
        this.depthOfKnowledge = depthOfKnowledge;
        return (B) this;
    }

    public B withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return (B) this;
    }

    public B withCreateDate(Instant createDate) {
        this.createDate = createDate;
        return (B) this;
    }

    public B withStimulusId(String stimulusId) {
        this.stimulusId = stimulusId;
        return (B) this;
    }

    public B withBeingCreated(String beingCreated) {
        this.beingCreated = beingCreated;
        return (B) this;
    }

    public B withOrganizationTypeId(String organizationTypeId) {
        this.organizationTypeId = organizationTypeId;
        return (B) this;
    }

    public B withOrganizationName(String organizationName) {
        this.organizationName = organizationName;
        return (B) this;
    }

    public B withContentTaskModel(String contentTaskModel) {
        this.contentTaskModel = contentTaskModel;
        return (B) this;
    }

    public B withWorkflowStatusUpdatedDate(Instant workflowStatusUpdatedDate) {
        this.workflowStatusUpdatedDate = workflowStatusUpdatedDate;
        return (B) this;
    }

    public B withItemAuthor(String itemAuthor) {
        this.itemAuthor = itemAuthor;
        return (B) this;
    }

    public B withPrimaryClaim(String primaryClaim) {
        this.primaryClaim = primaryClaim;
        return (B) this;
    }

    public B withPrimaryTarget(String primaryTarget) {
        this.primaryTarget = primaryTarget;
        return (B) this;
    }

    public B withPrimaryContentDomain(String primaryContentDomain) {
        this.primaryContentDomain = primaryContentDomain;
        return (B) this;
    }

    public B withPrimaryCommonCoreStandard(String primaryCommonCoreStandard) {
        this.primaryCommonCoreStandard = primaryCommonCoreStandard;
        return (B) this;
    }

    public B withSecondaryClaim(String secondaryClaim) {
        this.secondaryClaim = secondaryClaim;
        return (B) this;
    }

    public B withSecondaryTarget(String secondaryTarget) {
        this.secondaryTarget = secondaryTarget;
        return (B) this;
    }

    public B withSecondaryContentDomain(String secondaryContentDomain) {
        this.secondaryContentDomain = secondaryContentDomain;
        return (B) this;
    }

    public B withSecondaryCommonCoreStandard(String secondaryCommonCoreStandard) {
        this.secondaryCommonCoreStandard = secondaryCommonCoreStandard;
        return (B) this;
    }

    public B withTertiaryClaim(String tertiaryClaim) {
        this.tertiaryClaim = tertiaryClaim;
        return (B) this;
    }

    public B withTertiaryTarget(String tertiaryTarget) {
        this.tertiaryTarget = tertiaryTarget;
        return (B) this;
    }

    public B withTertiaryContentDomain(String tertiaryContentDomain) {
        this.tertiaryContentDomain = tertiaryContentDomain;
        return (B) this;
    }

    public B withTertiaryCommonCoreStandard(String tertiaryCommonCoreStandard) {
        this.tertiaryCommonCoreStandard = tertiaryCommonCoreStandard;
        return (B) this;
    }

    public B withQuaternaryClaim(String quaternaryClaim) {
        this.quaternaryClaim = quaternaryClaim;
        return (B) this;
    }

    public B withQuaternaryTarget(String quaternaryTarget) {
        this.quaternaryTarget = quaternaryTarget;
        return (B) this;
    }

    public B withQuaternaryContentDomain(String quaternaryContentDomain) {
        this.quaternaryContentDomain = quaternaryContentDomain;
        return (B) this;
    }

    public B withQuaternaryCommonCoreStandard(String quaternaryCommonCoreStandard) {
        this.quaternaryCommonCoreStandard = quaternaryCommonCoreStandard;
        return (B) this;
    }

    public B withEnglishContentLastUpdatedDate(Instant englishContentLastUpdatedDate) {
        this.englishContentLastUpdatedDate = englishContentLastUpdatedDate;
        return (B) this;
    }

    public B withSpanishContentLastUpdatedDate(Instant spanishContentLastUpdatedDate) {
        this.spanishContentLastUpdatedDate = spanishContentLastUpdatedDate;
        return (B) this;
    }

    public B withUpdateDate(Instant updateDate) {
        this.updateDate = updateDate;
        return (B) this;
    }

    public B withFieldTestDate(Instant fieldTestDate) {
        this.fieldTestDate = fieldTestDate;
        return (B) this;
    }

    public B withAslProvided(String aslProvided) {
        this.aslProvided = aslProvided;
        return (B) this;
    }

    public B withAslRequired(String aslRequired) {
        this.aslRequired = aslRequired;
        return (B) this;
    }

    public B withBrailleProvided(String brailleProvided) {
        this.brailleProvided = brailleProvided;
        return (B) this;
    }

    public B withBrailleRequired(String brailleRequired) {
        this.brailleRequired = brailleRequired;
        return (B) this;
    }

    public B withClosedCaptioningProvided(String closedCaptioningProvided) {
        this.closedCaptioningProvided = closedCaptioningProvided;
        return (B) this;
    }

    public B withClosedCaptioningRequired(String closedCaptioningRequired) {
        this.closedCaptioningRequired = closedCaptioningRequired;
        return (B) this;
    }

    public B withAllowCalculator(String allowCalculator) {
        this.allowCalculator = allowCalculator;
        return (B) this;
    }

    public B withTranslationProvided(String translationProvided) {
        this.translationProvided = translationProvided;
        return (B) this;
    }

    public B withTranslationRequired(String translationRequired) {
        this.translationRequired = translationRequired;
        return (B) this;
    }

    public B withItemDifficultyQuintile(String itemDifficultyQuintile) {
        this.itemDifficultyQuintile = itemDifficultyQuintile;
        return (B) this;
    }

    public B withPerformanceTask(String performanceTask) {
        this.performanceTask = performanceTask;
        return (B) this;
    }

    public B withTestCategory(String testCategory) {
        this.testCategory = testCategory;
        return (B) this;
    }

    public B withWritingPurpose(String writingPurpose) {
        this.writingPurpose = writingPurpose;
        return (B) this;
    }

    public B withScoringEngine(String scoringEngine) {
        this.scoringEngine = scoringEngine;
        return (B) this;
    }

    public B withAssociatedItemCount(String associatedItemCount) {
        this.associatedItemCount = associatedItemCount;
        return (B) this;
    }

    public B withAslUploadedPriorToLastContentUpdate(String aslUploadedPriorToLastContentUpdate) {
        this.aslUploadedPriorToLastContentUpdate = aslUploadedPriorToLastContentUpdate;
        return (B) this;
    }

    public B withBrailleUploadedPriorToLastContentUpdate(String brailleUploadedPriorToLastContentUpdate) {
        this.brailleUploadedPriorToLastContentUpdate = brailleUploadedPriorToLastContentUpdate;
        return (B) this;
    }

    public B withClosedCaptioningUploadedPriorToLastContentUpdate(String closedCaptioningUploadedPriorToLastContentUpdate) {
        this.closedCaptioningUploadedPriorToLastContentUpdate = closedCaptioningUploadedPriorToLastContentUpdate;
        return (B) this;
    }

    public B withCalculatedFormCount(String calculatedFormCount) {
        this.calculatedFormCount = calculatedFormCount;
        return (B) this;
    }

    public B withCalculatedExposuresCount(String calculatedExposuresCount) {
        this.calculatedExposuresCount = calculatedExposuresCount;
        return (B) this;
    }

    public B withSightTtsProvided(String sightTtsProvided) {
        this.sightTtsProvided = sightTtsProvided;
        return (B) this;
    }

    public B withVisualTtsProvided(String visualTtsProvided) {
        this.visualTtsProvided = visualTtsProvided;
        return (B) this;
    }

    public B withVisualTtsRequired(String visualTtsRequired) {
        this.visualTtsRequired = visualTtsRequired;
        return (B) this;
    }

    public B withEnglishPassagesCount(String englishPassagesCount) {
        this.englishPassagesCount = englishPassagesCount;
        return (B) this;
    }

    public B withSpanishPassagesCount(String spanishPassagesCount) {
        this.spanishPassagesCount = spanishPassagesCount;
        return (B) this;
    }

    public B withContentChangedAfterOperational(String contentChangedAfterOperational) {
        this.contentChangedAfterOperational = contentChangedAfterOperational;
        return (B) this;
    }

    public B withUnresolvedUpdateNeed(String unresolvedUpdateNeed) {
        this.unresolvedUpdateNeed = unresolvedUpdateNeed;
        return (B) this;
    }

    public B withCurrentUpdateNeedCreatedDate(Instant currentUpdateNeedCreatedDate) {
        this.currentUpdateNeedCreatedDate = currentUpdateNeedCreatedDate;
        return (B) this;
    }

    public B withCurrentUpdateNeedResolutionDate(Instant currentUpdateNeedResolutionDate) {
        this.currentUpdateNeedResolutionDate = currentUpdateNeedResolutionDate;
        return (B) this;
    }

    public B withCurrentUpdateNeedInternalResolutionDate(Instant currentUpdateNeedInternalResolutionDate) {
        this.currentUpdateNeedInternalResolutionDate = currentUpdateNeedInternalResolutionDate;
        return (B) this;
    }

    public B withCurrentUpdateNeedResolution(String currentUpdateNeedResolution) {
        this.currentUpdateNeedResolution = currentUpdateNeedResolution;
        return (B) this;
    }

    public B withCurrentUpdateNeedInternalResolution(String currentUpdateNeedInternalResolution) {
        this.currentUpdateNeedInternalResolution = currentUpdateNeedInternalResolution;
        return (B) this;
    }

    public B withEnglishGlossaryProvided(final boolean englishGlossaryProvided) {
        this.englishGlossaryProvided = englishGlossaryProvided;
        return (B) this;
    }

    public B withIllustratedGlossaryProvided(final boolean illustratedGlossaryProvided) {
        this.illustratedGlossaryProvided = illustratedGlossaryProvided;
        return (B) this;
    }

    public B withIllustratedGlossaryRequired(final String illustratedGlossaryRequired) {
        this.illustratedGlossaryRequired = illustratedGlossaryRequired;
        return (B) this;
    }

    public B withTranslatedGlossaryProvided(final boolean translatedGlossaryProvided) {
        this.translatedGlossaryProvided = translatedGlossaryProvided;
        return (B) this;
    }

    public B withTranslatedGlossaryRequired(final String translatedGlossaryRequired) {
        this.translatedGlossaryRequired = translatedGlossaryRequired;
        return (B) this;
    }

    public ItemSearchResult build() {
        return build(new ItemSearchResult());
    }

    public ItemSearchResult build(ItemSearchResult itemSearchResult) {
        itemSearchResult.setId(id);
        itemSearchResult.setSubject(subject);
        itemSearchResult.setIntendedGrade(intendedGrade);
        itemSearchResult.setWorkflowStatus(workflowStatus);
        itemSearchResult.setType(type);
        itemSearchResult.setDepthOfKnowledge(depthOfKnowledge);
        itemSearchResult.setCreatedBy(createdBy);
        itemSearchResult.setCreateDate(createDate);
        itemSearchResult.setStimulusId(stimulusId);
        itemSearchResult.setBeingCreated(beingCreated);
        itemSearchResult.setOrganizationTypeId(organizationTypeId);
        itemSearchResult.setOrganizationName(organizationName);
        itemSearchResult.setContentTaskModel(contentTaskModel);
        itemSearchResult.setWorkflowStatusUpdatedDate(workflowStatusUpdatedDate);
        itemSearchResult.setItemAuthor(itemAuthor);
        itemSearchResult.setPrimaryClaim(primaryClaim);
        itemSearchResult.setPrimaryTarget(primaryTarget);
        itemSearchResult.setPrimaryContentDomain(primaryContentDomain);
        itemSearchResult.setPrimaryCommonCoreStandard(primaryCommonCoreStandard);
        itemSearchResult.setSecondaryClaim(secondaryClaim);
        itemSearchResult.setSecondaryTarget(secondaryTarget);
        itemSearchResult.setSecondaryContentDomain(secondaryContentDomain);
        itemSearchResult.setSecondaryCommonCoreStandard(secondaryCommonCoreStandard);
        itemSearchResult.setTertiaryClaim(tertiaryClaim);
        itemSearchResult.setTertiaryTarget(tertiaryTarget);
        itemSearchResult.setTertiaryContentDomain(tertiaryContentDomain);
        itemSearchResult.setTertiaryCommonCoreStandard(tertiaryCommonCoreStandard);
        itemSearchResult.setQuaternaryClaim(quaternaryClaim);
        itemSearchResult.setQuaternaryTarget(quaternaryTarget);
        itemSearchResult.setQuaternaryContentDomain(quaternaryContentDomain);
        itemSearchResult.setQuaternaryCommonCoreStandard(quaternaryCommonCoreStandard);
        itemSearchResult.setEnglishContentLastUpdatedDate(englishContentLastUpdatedDate);
        itemSearchResult.setSpanishContentLastUpdatedDate(spanishContentLastUpdatedDate);
        itemSearchResult.setUpdateDate(updateDate);
        itemSearchResult.setFieldTestDate(fieldTestDate);
        itemSearchResult.setAslProvided(aslProvided);
        itemSearchResult.setAslRequired(aslRequired);
        itemSearchResult.setBrailleProvided(brailleProvided);
        itemSearchResult.setBrailleRequired(brailleRequired);
        itemSearchResult.setClosedCaptioningProvided(closedCaptioningProvided);
        itemSearchResult.setClosedCaptioningRequired(closedCaptioningRequired);
        itemSearchResult.setAllowCalculator(allowCalculator);
        itemSearchResult.setTranslationProvided(translationProvided);
        itemSearchResult.setTranslationRequired(translationRequired);
        itemSearchResult.setItemDifficultyQuintile(itemDifficultyQuintile);
        itemSearchResult.setPerformanceTask(performanceTask);
        itemSearchResult.setTestCategory(testCategory);
        itemSearchResult.setWritingPurpose(writingPurpose);
        itemSearchResult.setScoringEngine(scoringEngine);
        itemSearchResult.setAssociatedItemCount(associatedItemCount);
        itemSearchResult.setAslUploadedPriorToLastContentUpdate(aslUploadedPriorToLastContentUpdate);
        itemSearchResult.setBrailleUploadedPriorToLastContentUpdate(brailleUploadedPriorToLastContentUpdate);
        itemSearchResult.setClosedCaptioningUploadedPriorToLastContentUpdate(closedCaptioningUploadedPriorToLastContentUpdate);
        itemSearchResult.setCalculatedFormCount(calculatedFormCount);
        itemSearchResult.setCalculatedExposuresCount(calculatedExposuresCount);
        itemSearchResult.setSightTtsProvided(sightTtsProvided);
        itemSearchResult.setVisualTtsProvided(visualTtsProvided);
        itemSearchResult.setVisualTtsRequired(visualTtsRequired);
        itemSearchResult.setEnglishPassagesCount(englishPassagesCount);
        itemSearchResult.setSpanishPassagesCount(spanishPassagesCount);
        itemSearchResult.setContentChangedAfterOperational(contentChangedAfterOperational);
        itemSearchResult.setUnresolvedUpdateNeed(unresolvedUpdateNeed);
        itemSearchResult.setCurrentUpdateNeedCreatedDate(currentUpdateNeedCreatedDate);
        itemSearchResult.setCurrentUpdateNeedResolutionDate(currentUpdateNeedResolutionDate);
        itemSearchResult.setCurrentUpdateNeedInternalResolutionDate(currentUpdateNeedInternalResolutionDate);
        itemSearchResult.setCurrentUpdateNeedResolution(currentUpdateNeedResolution);
        itemSearchResult.setCurrentUpdateNeedInternalResolution(currentUpdateNeedInternalResolution);
        itemSearchResult.setEnglishGlossaryProvided(englishGlossaryProvided);
        itemSearchResult.setIllustratedGlossaryProvided(illustratedGlossaryProvided);
        itemSearchResult.setIllustratedGlossaryRequired(illustratedGlossaryRequired);
        itemSearchResult.setTranslatedGlossaryProvided(translatedGlossaryProvided);
        itemSearchResult.setTranslatedGlossaryRequired(translatedGlossaryRequired);
        return itemSearchResult;
    }
}
