package org.opentestsystem.ap.imrt.iss.service;

import com.google.common.collect.Lists;
import org.opentestsystem.ap.imrt.common.model.BaseItem;
import org.opentestsystem.ap.imrt.iss.dto.search.SearchRequest;
import org.opentestsystem.ap.imrt.iss.repository.BaseItemSearchRepository;
import org.opentestsystem.ap.imrt.iss.specification.BaseItemSpecificationMapper;
import org.springframework.data.jpa.domain.Specification;
import org.springframework.data.jpa.domain.Specifications;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

@Service
public class ItemSearchServiceImpl implements ItemSearchService {
    private final BaseItemSearchRepository baseItemSearchRepository;

    public ItemSearchServiceImpl(final BaseItemSearchRepository baseItemSearchRepository) {
        this.baseItemSearchRepository = baseItemSearchRepository;
    }

    @Override
    public List<BaseItem> searchItems(final SearchRequest searchCriteria) {
        Optional<Specifications<BaseItem>> maybeSpecifications = createSpecification(searchCriteria);

        if(maybeSpecifications.isPresent()) {
            return baseItemSearchRepository.findAll(maybeSpecifications.get());
        }

        return Lists.newArrayList(baseItemSearchRepository.findAll());
    }

    private Optional<Specifications<BaseItem>> createSpecification(final SearchRequest searchCriteria) {
        List<Specification<BaseItem>> specifications = new ArrayList<>(BaseItemSpecificationMapper.map(searchCriteria));

        if(specifications.isEmpty()) {
            return Optional.empty();
        }

        Specifications<BaseItem> spec = null;
        for (Specification<BaseItem> specification : specifications) {
            if(spec == null) {
                spec = Specifications.where(specification);
                continue;
            }

            spec = spec.and(specification);
        }

        return Optional.of(spec);
    }
}
