package org.opentestsystem.ap.imrt.iss.model;

import com.google.common.annotations.VisibleForTesting;
import org.opentestsystem.ap.imrt.common.model.BaseItem;
import org.springframework.data.jpa.domain.Specification;

import java.util.List;

import static org.opentestsystem.ap.imrt.iss.service.filter.BaseItemFilterSpecifications.contains;

/**
 * Handles substring filtering.  For example, find all items that have property containing "test".
 */
public class ContainsSearchFilter extends AbstractSearchFilter implements SearchFilter {
    private final List<String> filterValues;

    public ContainsSearchFilter(final String filterProperty, final List<String> filterValues) {
        super(filterProperty);
        this.filterValues = filterValues;
    }

    @Override
    public boolean isEmpty() {
        return filterValues.isEmpty();
    }

    @Override
    public boolean isValid() {
        return true;
    }

    @Override
    public Specification<BaseItem> getSpecification() {
        return contains(getFilterProperty(), filterValues);
    }

    @VisibleForTesting
    List<String> getFilterValues() {
        return filterValues;
    }
}
