package org.opentestsystem.ap.imrt.iss.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.opentestsystem.ap.common.model.Item;

import java.time.Duration;
import java.time.Instant;
import java.util.Optional;

/**
 * Representation of the {@link org.opentestsystem.ap.imrt.common.model.ImrtItem} domain object
 */
@JsonPropertyOrder(alphabetic = true)
public class ItemDto {
    private String id;
    private String subject;
    private String intendedGrade;
    private String workflowStatus;
    private String type;
    private String depthOfKnowledge;
    private String createdBy;
    private Instant createDate;
    private Item itemDetail;
    private String stimulusId;
    private boolean beingCreated;
    private String organizationTypeId;
    private String organizationName;
    private String contentTaskModel;
    private Instant workflowStatusUpdatedDate;
    private String itemAuthor;

    //Standard Alignment Information
    private String primaryClaim;
    private String primaryAssessmentTarget;
    private String primaryContentDomain;
    private String primaryCommonCoreStandard;
    private String secondaryClaim;
    private String secondaryAssessmentTarget;
    private String secondaryContentDomain;
    private String secondaryCommonCoreStandard;
    private String tertiaryClaim;
    private String tertiaryAssessmentTarget;
    private String tertiaryContentDomain;
    private String tertiaryCommonCoreStandard;
    private String quaternaryClaim;
    private String quaternaryAssessmentTarget;
    private String quaternaryContentDomain;
    private String quaternaryCommonCoreStandard;

    private Instant englishContentLastUpdatedDate;
    private Long totalExposures;
    private Instant fieldTestDate;
    private Boolean aslProvided;
    private String aslRequired;
    private Boolean brailleProvided;
    private String brailleRequired;
    private Boolean closedCaptioningProvided;
    private String closedCaptioningRequired;
    private String allowCalculator;
    private Boolean translationProvided;
    private String translationRequired;
    private Integer itemDifficultyQuintile;
    private String performanceTask;
    private String testCategory;
    private String writingPurpose;

    //TODO - This will need to be derived by IMRT
    private Integer associatedItemCount;

    //TODO - This will need to be derived by IMRT
    private Boolean aslUploadedPriorToLastContentUpdate;

    //TODO - This will need to be derived by IMRT
    private Boolean brailleUploadedPriorToLastContentUpdate;

    //TODO - This will need to be derived by IMRT
    private Boolean closedCaptioningUploadedPriorToLastContentUpdate;

    /**
     * @return the unique item id
     */
    public String getId() {
        return id;
    }

    /**
     * @return the subject for the item
     */
    public String getSubject() {
        return subject;
    }

    /**
     * @return the intendedGrade for the item
     */
    public String getIntendedGrade() {
        return intendedGrade;
    }

    /**
     * @return the current workflow status of the item
     */
    public String getWorkflowStatus() {
        return workflowStatus;
    }

    /**
     * @return the type of item.  This will be the item type code
     */
    public String getType() {
        return type;
    }

    /**
     * @return the depth of knowledge value for the item
     */
    public String getDepthOfKnowledge() {
        return depthOfKnowledge;
    }

    /**
     * @return the itembank user for the user that created the item
     */
    public String getCreatedBy() {
        return createdBy;
    }

    /**
     * @return the time the item was created
     */
    public Instant getCreateDate() {
        return createDate;
    }

    /**
     * @return the item's associated stimulus id otherwise blank
     */
    public String getStimulusId() {
        return stimulusId;
    }

    /**
     * @return the item detail as stored in the item bank
     */
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Item getItemDetail() {
        return itemDetail;
    }

    /**
     * @return {@code true} if the item is being created and is not yet officially in the item bank
     */
    @JsonProperty("isBeingCreated")
    public boolean isBeingCreated() {
        return beingCreated;
    }

    /**
     * @return The organization type id for the item
     */
    public String getOrganizationTypeId() {
        return organizationTypeId;
    }

    /**
     * @return The organization name for the item
     */
    public String getOrganizationName() {
        return organizationName;
    }

    /**
     * @return the primary claim for the item
     */
    public String getPrimaryClaim() {
        return primaryClaim;
    }

    /**
     * @return the primary assessment target
     */
    public String getPrimaryAssessmentTarget() {
        return primaryAssessmentTarget;
    }

    /**
     * @return the primary content domain
     */
    public String getPrimaryContentDomain() {
        return primaryContentDomain;
    }

    /**
     * @return the primary common core standard
     */
    public String getPrimaryCommonCoreStandard() {
        return primaryCommonCoreStandard;
    }

    /**
     * @return the secondary claim
     */
    public String getSecondaryClaim() {
        return secondaryClaim;
    }

    /**
     * @return the secondary assessment target
     */
    public String getSecondaryAssessmentTarget() {
        return secondaryAssessmentTarget;
    }

    /**
     * @return the secondary content domain
     */
    public String getSecondaryContentDomain() {
        return secondaryContentDomain;
    }

    /**
     * @return the secondary common core standard
     */
    public String getSecondaryCommonCoreStandard() {
        return secondaryCommonCoreStandard;
    }

    /**
     * @return the tertiary claim id
     */
    public String getTertiaryClaim() {
        return tertiaryClaim;
    }

    /**
     * @return the tertiary assessment target
     */
    public String getTertiaryAssessmentTarget() {
        return tertiaryAssessmentTarget;
    }

    /**
     * @return the tertiary content domain
     */
    public String getTertiaryContentDomain() {
        return tertiaryContentDomain;
    }

    /**
     * @return the tertiary common core standard
     */
    public String getTertiaryCommonCoreStandard() {
        return tertiaryCommonCoreStandard;
    }

    /**
     * @return the quaternary claim id
     */
    public String getQuaternaryClaim() {
        return quaternaryClaim;
    }

    /**
     * @return the quaternary assessment target
     */
    public String getQuaternaryAssessmentTarget() {
        return quaternaryAssessmentTarget;
    }

    /**
     * @return the quaternary content domain
     */
    public String getQuaternaryContentDomain() {
        return quaternaryContentDomain;
    }

    /**
     * @return the quaternary common core standard
     */
    public String getQuaternaryCommonCoreStandard() {
        return quaternaryCommonCoreStandard;
    }

    /**
     * @return the item's content task model
     */
    public String getContentTaskModel() {
        return contentTaskModel;
    }

    /**
     * @return the last time the workflow status was set or updated
     */
    public Instant getWorkflowStatusUpdatedDate() {
        return workflowStatusUpdatedDate;
    }

    /**
     * @return the number of days since the workflow status was changed.  Days based on UTC
     */
    public Optional<Long> getDaysInWorkflowStatus() {
        if (workflowStatusUpdatedDate == null) {
            return Optional.empty();
        }

        return Optional.of(Duration.between(workflowStatusUpdatedDate, Instant.now()).toDays());
    }

    /**
     * @return the item's author as defined in the item
     */
    public String getItemAuthor() {
        return itemAuthor;
    }

    /**
     * @return the last update date for English content
     */
    public Instant getEnglishContentLastUpdatedDate() {
        return englishContentLastUpdatedDate;
    }

    /**
     * @return the total number of totalExposures for an item
     */
    public Long getTotalExposures() {
        return totalExposures;
    }

    /**
     * @return the date the item was field tested
     */
    public Instant getFieldTestDate() {
        return fieldTestDate;
    }

    /**
     * @return {@code true} if asl provided
     */
    @JsonProperty("isAslProvided")
    public Boolean isAslProvided() {
        return aslProvided;
    }

    /**
     * @return whether ASL is required for the item
     */
    @JsonProperty("isAslRequired")
    public String getAslRequired() {
        return aslRequired;
    }

    /**
     * @return whether Brailled is provided
     */
    @JsonProperty("isBrailleProvided")
    public Boolean isBrailleProvided() {
        return brailleProvided;
    }

    /**
     * @return whether Braille is required
     */
    @JsonProperty("isBrailleRequired")
    public String getBrailleRequired() {
        return brailleRequired;
    }

    /**
     * @return whether closed captioning is provided on the item
     */
    @JsonProperty("isClosedCaptioningProvided")
    public Boolean getClosedCaptioningProvided() {
        return closedCaptioningProvided;
    }

    /**
     * @return whether closed captioning is required
     */
    @JsonProperty("isClosedCaptioningRequired")
    public String getClosedCaptioningRequired() {
        return closedCaptioningRequired;
    }

    /**
     * @return whether a calculator is allowed for the item
     */
    public String getAllowCalculator() {
        return allowCalculator;
    }

    /**
     * @return whether translation has been provided for the item
     */
    @JsonProperty("isTranslationProvided")
    public Boolean getTranslationProvided() {
        return translationProvided;
    }

    /**
     * @return whether translation is required for the item
     */
    @JsonProperty("isTranslationRequired")
    public String getTranslationRequired() {
        return translationRequired;
    }

    /**
     * @return the item difficulty quintile - values 1-5 or null if not set
     */
    public Integer getItemDifficultyQuintile() {
        return itemDifficultyQuintile;
    }

    /**
     * @return the type of performance task associated with the itme
     */
    public String getPerformanceTask() {
        return performanceTask;
    }

    /**
     * @return the test category for the item
     */
    public String getTestCategory() {
        return testCategory;
    }

    /**
     * @return the writing purpose for an item
     */
    public String getWritingPurpose() {
        return writingPurpose;
    }

    /**
     * @return the associated item count.  This will only be populated for stimulus item types
     */
    public Integer getAssociatedItemCount() {
        return associatedItemCount;
    }

    /**
     * @return {@code true} if the ASL content was uploaded prior to the content was updated
     */
    @JsonProperty("isAslUploadedPriorToLastContentUpdate")
    public Boolean isAslUploadedPriorToLastContentUpdate() {
        return aslUploadedPriorToLastContentUpdate;
    }

    /**
     * @return {@code true} if the ASL content was uploaded prior to the content was updated
     */
    @JsonProperty("isBrailleUploadedPriorToLastContentUpdate")
    public Boolean isBrailleUploadedPriorToLastContentUpdate() {
        return brailleUploadedPriorToLastContentUpdate;
    }

    /**
     * @return {@code true} if the Closed Captioning content was uploaded prior to the content was updated
     */
    public Boolean isClosedCaptioningUploadedPriorToLastContentUpdate() {
        return closedCaptioningUploadedPriorToLastContentUpdate;
    }

    /**
     * @return a new {@link Builder}
     */
    public static Builder builder() {
        return new Builder();
    }

    public static final class Builder {
        private String id;
        private String subject;
        private String intendedGrade;
        private String workflowStatus;
        private String type;
        private String depthOfKnowledge;
        private String createdBy;
        private Instant createDate;
        private Item itemDetail;
        private String stimulusId;
        private boolean beingCreated;
        private String organizationTypeId;
        private String organizationName;
        private String contentTaskModel;
        private Instant workflowStatusUpdatedDate;
        private String itemAuthor;
        //Standard Alignment Information
        private String primaryClaim;
        private String primaryAssessmentTarget;
        private String primaryContentDomain;
        private String primaryCommonCoreStandard;
        private String secondaryClaim;
        private String secondaryAssessmentTarget;
        private String secondaryContentDomain;
        private String secondaryCommonCoreStandard;
        private String tertiaryClaim;
        private String tertiaryAssessmentTarget;
        private String tertiaryContentDomain;
        private String tertiaryCommonCoreStandard;
        private String quaternaryClaim;
        private String quaternaryAssessmentTarget;
        private String quaternaryContentDomain;
        private String quaternaryCommonCoreStandard;
        private Instant englishContentLastUpdatedDate;
        private Long totalExposures;
        private Instant fieldTestDate;
        private Boolean aslProvided;
        private String aslRequired;
        private Boolean brailleProvided;
        private String brailleRequired;
        private Boolean closedCaptioningProvided;
        private String closedCaptioningRequired;
        private String allowCalculator;
        private Boolean translationProvided;
        private String translationRequired;
        private Integer itemDifficultyQuintile;
        private String performanceTask;
        private String testCategory;
        private String writingPurpose;
        //TODO - This will need to be derived by IMRT
        private Integer associatedItemCount;
        //TODO - This will need to be derived by IMRT
        private Boolean aslUploadedPriorToLastContentUpdate;
        //TODO - This will need to be derived by IMRT
        private Boolean brailleUploadedPriorToLastContentUpdate;
        //TODO - This will need to be derived by IMRT
        private Boolean closedCaptioningUploadedPriorToLastContentUpdate;

        private Builder() {
        }

        public Builder withId(String id) {
            this.id = id;
            return this;
        }

        public Builder withSubject(String subject) {
            this.subject = subject;
            return this;
        }

        public Builder withIntendedGrade(String intendedGrade) {
            this.intendedGrade = intendedGrade;
            return this;
        }

        public Builder withWorkflowStatus(String workflowStatus) {
            this.workflowStatus = workflowStatus;
            return this;
        }

        public Builder withType(String type) {
            this.type = type;
            return this;
        }

        public Builder withDepthOfKnowledge(String depthOfKnowledge) {
            this.depthOfKnowledge = depthOfKnowledge;
            return this;
        }

        public Builder withCreatedBy(String createdBy) {
            this.createdBy = createdBy;
            return this;
        }

        public Builder withCreateDate(Instant createDate) {
            this.createDate = createDate;
            return this;
        }

        public Builder withItemDetail(Item itemDetail) {
            this.itemDetail = itemDetail;
            return this;
        }

        public Builder withStimulusId(String stimulusId) {
            this.stimulusId = stimulusId;
            return this;
        }

        public Builder withBeingCreated(boolean beingCreated) {
            this.beingCreated = beingCreated;
            return this;
        }

        public Builder withOrganizationTypeId(String organizationTypeId) {
            this.organizationTypeId = organizationTypeId;
            return this;
        }

        public Builder withOrganizationName(String organizationName) {
            this.organizationName = organizationName;
            return this;
        }

        public Builder withContentTaskModel(String contentTaskModel) {
            this.contentTaskModel = contentTaskModel;
            return this;
        }

        public Builder withWorkflowStatusUpdatedDate(Instant workflowStatusUpdatedDate) {
            this.workflowStatusUpdatedDate = workflowStatusUpdatedDate;
            return this;
        }

        public Builder withItemAuthor(String itemAuthor) {
            this.itemAuthor = itemAuthor;
            return this;
        }

        public Builder withPrimaryClaim(String primaryClaim) {
            this.primaryClaim = primaryClaim;
            return this;
        }

        public Builder withPrimaryAssessmentTarget(String primaryAssessmentTarget) {
            this.primaryAssessmentTarget = primaryAssessmentTarget;
            return this;
        }

        public Builder withPrimaryContentDomain(String primaryContentDomain) {
            this.primaryContentDomain = primaryContentDomain;
            return this;
        }

        public Builder withPrimaryCommonCoreStandard(String primaryCommonCoreStandard) {
            this.primaryCommonCoreStandard = primaryCommonCoreStandard;
            return this;
        }

        public Builder withSecondaryClaim(String secondaryClaim) {
            this.secondaryClaim = secondaryClaim;
            return this;
        }

        public Builder withSecondaryAssessmentTarget(String secondaryAssessmentTarget) {
            this.secondaryAssessmentTarget = secondaryAssessmentTarget;
            return this;
        }

        public Builder withSecondaryContentDomain(String secondaryContentDomain) {
            this.secondaryContentDomain = secondaryContentDomain;
            return this;
        }

        public Builder withSecondaryCommonCoreStandard(String secondaryCommonCoreStandard) {
            this.secondaryCommonCoreStandard = secondaryCommonCoreStandard;
            return this;
        }

        public Builder withTertiaryClaim(String tertiaryClaim) {
            this.tertiaryClaim = tertiaryClaim;
            return this;
        }

        public Builder withTertiaryAssessmentTarget(String tertiaryAssessmentTarget) {
            this.tertiaryAssessmentTarget = tertiaryAssessmentTarget;
            return this;
        }

        public Builder withTertiaryContentDomain(String tertiaryContentDomain) {
            this.tertiaryContentDomain = tertiaryContentDomain;
            return this;
        }

        public Builder withTertiaryCommonCoreStandard(String tertiaryCommonCoreStandard) {
            this.tertiaryCommonCoreStandard = tertiaryCommonCoreStandard;
            return this;
        }

        public Builder withQuaternaryClaim(String quaternaryClaim) {
            this.quaternaryClaim = quaternaryClaim;
            return this;
        }

        public Builder withQuaternaryAssessmentTarget(String quaternaryAssessmentTarget) {
            this.quaternaryAssessmentTarget = quaternaryAssessmentTarget;
            return this;
        }

        public Builder withQuaternaryContentDomain(String quaternaryContentDomain) {
            this.quaternaryContentDomain = quaternaryContentDomain;
            return this;
        }

        public Builder withQuaternaryCommonCoreStandard(String quaternaryCommonCoreStandard) {
            this.quaternaryCommonCoreStandard = quaternaryCommonCoreStandard;
            return this;
        }

        public Builder withEnglishContentLastUpdatedDate(Instant englishContentLastUpdatedDate) {
            this.englishContentLastUpdatedDate = englishContentLastUpdatedDate;
            return this;
        }

        public Builder withTotalExposures(Long totalExposures) {
            this.totalExposures = totalExposures;
            return this;
        }

        public Builder withFieldTestDate(Instant fieldTestDate) {
            this.fieldTestDate = fieldTestDate;
            return this;
        }

        public Builder withAslProvided(Boolean aslProvided) {
            this.aslProvided = aslProvided;
            return this;
        }

        public Builder withAslRequired(String aslRequired) {
            this.aslRequired = aslRequired;
            return this;
        }

        public Builder withBrailleProvided(Boolean brailleProvided) {
            this.brailleProvided = brailleProvided;
            return this;
        }

        public Builder withBrailleRequired(String brailleRequired) {
            this.brailleRequired = brailleRequired;
            return this;
        }

        public Builder withClosedCaptioningProvided(Boolean closedCaptioningProvided) {
            this.closedCaptioningProvided = closedCaptioningProvided;
            return this;
        }

        public Builder withClosedCaptioningRequired(String closedCaptioningRequired) {
            this.closedCaptioningRequired = closedCaptioningRequired;
            return this;
        }

        public Builder withAllowCalculator(String allowCalculator) {
            this.allowCalculator = allowCalculator;
            return this;
        }

        public Builder withTranslationProvided(Boolean translationProvided) {
            this.translationProvided = translationProvided;
            return this;
        }

        public Builder withTranslationRequired(String translationRequired) {
            this.translationRequired = translationRequired;
            return this;
        }

        public Builder withItemDifficultyQuintile(Integer itemDifficultyQuintile) {
            this.itemDifficultyQuintile = itemDifficultyQuintile;
            return this;
        }

        public Builder withPerformanceTask(String performanceTask) {
            this.performanceTask = performanceTask;
            return this;
        }

        public Builder withTestCategory(String testCategory) {
            this.testCategory = testCategory;
            return this;
        }

        public Builder withWritingPurpose(String writingPurpose) {
            this.writingPurpose = writingPurpose;
            return this;
        }

        public Builder withAssociatedItemCount(Integer associatedItemCount) {
            this.associatedItemCount = associatedItemCount;
            return this;
        }

        public Builder withAslUploadedPriorToLastContentUpdate(Boolean aslUploadedPriorToLastContentUpdate) {
            this.aslUploadedPriorToLastContentUpdate = aslUploadedPriorToLastContentUpdate;
            return this;
        }

        public Builder withBrailleUploadedPriorToLastContentUpdate(Boolean brailleUploadedPriorToLastContentUpdate) {
            this.brailleUploadedPriorToLastContentUpdate = brailleUploadedPriorToLastContentUpdate;
            return this;
        }

        public Builder withClosedCaptioningUploadedPriorToLastContentUpdate(Boolean closedCaptioningUploadedPriorToLastContentUpdate) {
            this.closedCaptioningUploadedPriorToLastContentUpdate = closedCaptioningUploadedPriorToLastContentUpdate;
            return this;
        }

        public ItemDto build() {
            ItemDto itemDto = new ItemDto();
            itemDto.primaryCommonCoreStandard = this.primaryCommonCoreStandard;
            itemDto.primaryClaim = this.primaryClaim;
            itemDto.aslRequired = this.aslRequired;
            itemDto.closedCaptioningUploadedPriorToLastContentUpdate = this.closedCaptioningUploadedPriorToLastContentUpdate;
            itemDto.stimulusId = this.stimulusId;
            itemDto.organizationTypeId = this.organizationTypeId;
            itemDto.tertiaryContentDomain = this.tertiaryContentDomain;
            itemDto.englishContentLastUpdatedDate = this.englishContentLastUpdatedDate;
            itemDto.allowCalculator = this.allowCalculator;
            itemDto.brailleProvided = this.brailleProvided;
            itemDto.createDate = this.createDate;
            itemDto.tertiaryAssessmentTarget = this.tertiaryAssessmentTarget;
            itemDto.translationProvided = this.translationProvided;
            itemDto.primaryContentDomain = this.primaryContentDomain;
            itemDto.secondaryCommonCoreStandard = this.secondaryCommonCoreStandard;
            itemDto.brailleRequired = this.brailleRequired;
            itemDto.quaternaryCommonCoreStandard = this.quaternaryCommonCoreStandard;
            itemDto.fieldTestDate = this.fieldTestDate;
            itemDto.workflowStatusUpdatedDate = this.workflowStatusUpdatedDate;
            itemDto.quaternaryAssessmentTarget = this.quaternaryAssessmentTarget;
            itemDto.contentTaskModel = this.contentTaskModel;
            itemDto.closedCaptioningRequired = this.closedCaptioningRequired;
            itemDto.translationRequired = this.translationRequired;
            itemDto.quaternaryContentDomain = this.quaternaryContentDomain;
            itemDto.secondaryContentDomain = this.secondaryContentDomain;
            itemDto.totalExposures = this.totalExposures;
            itemDto.closedCaptioningProvided = this.closedCaptioningProvided;
            itemDto.itemAuthor = this.itemAuthor;
            itemDto.aslProvided = this.aslProvided;
            itemDto.primaryAssessmentTarget = this.primaryAssessmentTarget;
            itemDto.depthOfKnowledge = this.depthOfKnowledge;
            itemDto.beingCreated = this.beingCreated;
            itemDto.secondaryAssessmentTarget = this.secondaryAssessmentTarget;
            itemDto.tertiaryClaim = this.tertiaryClaim;
            itemDto.subject = this.subject;
            itemDto.associatedItemCount = this.associatedItemCount;
            itemDto.type = this.type;
            itemDto.tertiaryCommonCoreStandard = this.tertiaryCommonCoreStandard;
            itemDto.testCategory = this.testCategory;
            itemDto.organizationName = this.organizationName;
            itemDto.aslUploadedPriorToLastContentUpdate = this.aslUploadedPriorToLastContentUpdate;
            itemDto.quaternaryClaim = this.quaternaryClaim;
            itemDto.itemDifficultyQuintile = this.itemDifficultyQuintile;
            itemDto.secondaryClaim = this.secondaryClaim;
            itemDto.writingPurpose = this.writingPurpose;
            itemDto.brailleUploadedPriorToLastContentUpdate = this.brailleUploadedPriorToLastContentUpdate;
            itemDto.intendedGrade = this.intendedGrade;
            itemDto.workflowStatus = this.workflowStatus;
            itemDto.itemDetail = this.itemDetail;
            itemDto.id = this.id;
            itemDto.performanceTask = this.performanceTask;
            itemDto.createdBy = this.createdBy;
            return itemDto;
        }
    }
}