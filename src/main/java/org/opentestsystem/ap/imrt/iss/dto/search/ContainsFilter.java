package org.opentestsystem.ap.imrt.iss.dto.search;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.List;

/**
 * A filter that will facilitate "LIKE" or "contains text" searches.  If multiple values are passed in, they will be
 * "OR"ed together.
 */
public class ContainsFilter extends Filter {
    static final String TYPE = "contains";
    private final List<String> values;

    /**
     * @param property the property to filter on
     */
    @JsonCreator
    public ContainsFilter(@JsonProperty("property") final String property,
                          @JsonProperty("values") final List<String> values) {
        super(property);

        if (values == null) {
            throw new IllegalArgumentException("values cannot be null");
        }

        if (values.isEmpty()) {
            throw new IllegalArgumentException("values cannot be empty; at least one value must be provided");
        }

        this.values = values;
    }

    /**
     * @return The text that should be contained in the property being searched against.
     */
    public List<String> getValues() {
        return values;
    }

    @Override
    public String getType() {
        return TYPE;
    }
}
