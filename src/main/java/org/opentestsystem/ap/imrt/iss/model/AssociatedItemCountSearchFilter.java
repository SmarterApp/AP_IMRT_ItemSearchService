package org.opentestsystem.ap.imrt.iss.model;

import org.opentestsystem.ap.imrt.iss.dto.search.SearchProperty;

import java.util.HashMap;
import java.util.Map;
import java.util.Optional;

public class AssociatedItemCountSearchFilter extends IntegerRangeSearchFilter {
    private static final String BASE_FILTER_SQL = " (select count(1) from stim_link where item_key_stim = item.key) ";

    public AssociatedItemCountSearchFilter(final SearchProperty filterProperty, final Integer min, final Integer max) {
        super(filterProperty, min, max);
    }

    @Override
    public Optional<FilterQuery> getFilterQuery() {
        if (getMin() == null && getMax() == null) {
            return Optional.empty();
        }

        Map<String, Object> parameters = new HashMap<>();
        String sql = BASE_FILTER_SQL;

        String minParameter = getFilterProperty().getProperty() + "Min";
        String maxParameter = getFilterProperty().getProperty() + "Max";

        if (getMin() != null && getMax() == null) {
            sql = sql + " >= :" + minParameter;
            parameters.put(minParameter, getMin());
        } else if (getMin() == null && getMax() != null) {
            sql = sql + " <= :" + maxParameter;
            parameters.put(maxParameter, getMax());
        } else if (getMin() != null) {
            sql = sql + " BETWEEN :" + minParameter + " AND :" + maxParameter;
            parameters.put(minParameter, getMin());
            parameters.put(maxParameter, getMax());
        }

        return Optional.of(new FilterQuery(sql, parameters));
    }
}
