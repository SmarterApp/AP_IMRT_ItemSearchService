package org.opentestsystem.ap.imrt.iss.dto.search;

import com.fasterxml.jackson.annotation.JsonProperty;

import java.time.Instant;
import java.util.Optional;

/**
 * Date range filter between dates
 * <p>
 * Filter functionality:
 * <p>
 * -- If the "to" date is supplied but no "from" date is supplied, the filter says "everything less than or equal to
 * 'to' date" -- If the "from" date is supplied but no "to" date is supplied, the filter says "everything greater than
 * or equal to 'from' date" -- If "from" and "to" dates are supplied, the filter says "everything between 'from' and
 * 'to' dates" -- if neither "to" date nor "from" date are supplied, this filter should be ignored
 * </p>
 */
public class DateRangeFilter extends Filter {
    private static final String TYPE = "dateRange";

    private final Instant to;
    private final Instant from;

    public DateRangeFilter(@JsonProperty("property") final String property,
                           @JsonProperty("includeBlanks") final boolean includeBlanks,
                           @JsonProperty("to") final Instant to,
                           @JsonProperty("from") final Instant from) {
        super(property, includeBlanks);
        this.to = to;
        this.from = from;
    }

    @Override
    public String getType() {
        return TYPE;
    }

    /**
     * @return the end date of the filter
     */
    public Optional<Instant> getTo() {
        return Optional.ofNullable(to);
    }

    /**
     * @return the beginning date of the filter
     */
    public Optional<Instant> getFrom() {
        return Optional.ofNullable(from);
    }

    @Override
    public String toString() {
        return String.format("DateRangeFilter{property='%s', to=%s, from=%s}",
            getSearchProperty(),
            to,
            from);
    }
}
