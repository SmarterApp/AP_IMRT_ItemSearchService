package org.opentestsystem.ap.imrt.iss.dto.search;

import java.util.Arrays;
import java.util.Optional;

public enum SearchProperty {
    ITEM_ID("id", "id", "item"),
    INTENDED_GRADE("intendedGrade", "grade", "item"),
    SUBJECT("subject", "subject", "item"),
    DOK("depthOfKnowledge", "dok", "item"),
    WORKFLOW_STATUS("workflowStatus", "workflow_status", "item"),
    ITEM_TYPE("type", "item_type", "item"),
    STIMULUS_ID("stimulusId", "associated_stimulus_id", "item"),
    DAYS_IN_WORKFLOW_STATUS("daysInWorkflowStatus", "workflow_status_set_at", "item"),
    BEING_CREATED("isBeingCreated", "is_being_created", "item"),
    ORGANIZATION_TYPE_ID("organizationTypeId", "organization_type_id", "item"),
    ORGANIZATION_NAME("organizationName", "organization_name", "item"),
    CONTENT_TASK_MODEL("contentTaskModel", "content_task_model", "item"),
    ITEM_AUTHOR("itemAuthor", "item_author", "item"),
    WORKFLOW_STATUS_UPDATE_DATE("workflowStatusUpdatedate", "workflow_status_set_at", "item"),
    CREATE_DATE("createDate", "item_created_at", "item"),
    CREATED_BY("createdBy", "item_created_by", "item"),
    CALCULATED_FORM_COUNT("calculatedFormCount", "form_count", "item"),
    CALCULATED_EXPOSURES_COUNT("calculatedExposuresCount", "exposures_count", "item"),
    ITEM_DIFFICULTY_QUINTILE("itemDifficultyQuintile", "item_difficulty_quintile", "item"),
    ASL_REQUIRED("isAslRequired", "asl_required", "item"),
    ASL_PROVIDED("isAslProvided", "asl_provided", "item"),
    BRAILLE_REQUIRED("isBrailleRequired", "braille_required", "item"),
    BRAILLE_PROVIDED("isBrailleProvided", "braille_provided", "item"),
    CC_REQUIRED("isClosedCaptioningRequired", "cc_required", "item"),
    CC_PROVIDED("isClosedCaptioningProvided", "cc_provided", "item"),
    TRANSLATION_REQUIRED("isTranslationRequired", "translation_required", "item"),
    TRANSLATION_PROVIDED("isTranslationProvided", "translation_provided", "item"),
    TTS_SIGHT_PROVIDED("isSightTTSProvided", "sight_tts_provided", "item"),
    TTS_VISUAL_PROVIDED("isVisualTTSProvided", "visual_tts_provided", "item"),
    TTS_VISUAL_REQUIRED("isVisualTTSRequired", "visual_tts_required", "item"),
    WRITING_PURPOSE("writingPurpose", "writing_purpose", "item"),
    PERFORMANCE_TASK("performanceTask", "performance_task", "item"),
    FORM_TYPE("formType", "form_type", "item_form"),
    ASSESSMENT_TYPE("assessmentType", "assessment_type", "item_form"),
    TEST_CATEGORY("testCategory", "test_category", "item"),
    ENGLISH_CONTENT_LAST_UPDATED_DATE("englishContentLastUpdatedDate", "english_content_last_updated_at", "item"),
    SPANISH_CONTENT_LAST_UPDATED_DATE("spanishContentLastUpdatedDate", "spanish_content_last_updated_at", "item"),
    SCORING_ENGINE("scoringEngine", "scoring_engine", "item"),
    ALLOW_CALCULATOR("allowCalculator", "allow_calculator", "item"),
    UPDATED_DATE("updatedDate", "updated_at", "item"),
    ASL_UPLOADED_PRIOR_TO_LAST_CONTENT_UPDATE("isAslUploadedPriorToLastContentUpdate", "asl_uploaded_prior_to_last_content_update", "item"),
    BRAILLE_UPLOADED_PRIOR_TO_LAST_CONTENT_UPDATE("isBrailleUploadedPriorToLastContentUpdate", "braille_uploaded_prior_to_last_content_update", "item"),
    CLOSED_CAPTIONING_UPLOADED_PRIOR_TO_LAST_CONTENT_UPDATE("isClosedCaptioningUploadedPriorToLastContentUpdate", "braille_uploaded_prior_to_last_content_update", "item"),
    PRIMARY_CLAIM("primaryClaim", "primary_claim", "item"),
    PRIMARY_TARGET("primaryTarget", "primary_target", "item"),
    PRIMARY_CONTENT_DOMAIN("primaryContentDomain", "primary_content_domain", "item"),
    PRIMARY_COMMON_CORE_STANDARD("primaryCommonCoreStandard", "primary_common_core_standard", "item"),
    SECONDARY_CLAIM("secondaryClaim", "secondary_claim", "item"),
    SECONDARY_TARGET("secondaryTarget", "secondary_target", "item"),
    SECONDARY_CONTENT_DOMAIN("secondaryContentDomain", "secondary_content_domain", "item"),
    SECONDARY_COMMON_CORE_STANDARD("secondaryCommonCoreStandard", "secondary_common_core_standard", "item"),
    TERTIARY_CLAIM("tertiaryClaim", "tertiary_claim", "item"),
    TERTIARY_TARGET("tertiaryTarget", "tertiary_target", "item"),
    TERTIARY_CONTENT_DOMAIN("tertiaryContentDomain", "tertiary_content_domain", "item"),
    TERTIARY_COMMON_CORE_STANDARD("tertiaryCommonCoreStandard", "tertiary_common_core_standard", "item"),
    QUATERNARY_CLAIM("quaternaryClaim", "quaternary_claim", "item"),
    QUATERNARY_TARGET("quaternaryTarget", "quaternary_target", "item"),
    QUATERNARY_CONTENT_DOMAIN("quaternaryContentDomain", "quaternary_content_domain", "item"),
    QUATERNARY_COMMON_CORE_STANDARD("quaternaryCommonCoreStandard", "quaternary_common_core_standard", "item");

    private final String property;
    private final String columnName;
    private final String table;

    SearchProperty(final String property, final String columnName, final String table) {
        this.property = property;
        this.columnName = columnName;
        this.table = table;
    }

    public String getProperty() {
        return property;
    }

    public String getColumnName() {
        return columnName;
    }

    public String getTable() {
        return table;
    }

    public static Optional<SearchProperty> propertyValueOf(final String searchProperty) {
        return Arrays.stream(values())
                .filter(property -> property.getProperty().equals(searchProperty))
                .findAny();
    }
}