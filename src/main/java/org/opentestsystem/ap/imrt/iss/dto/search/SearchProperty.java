package org.opentestsystem.ap.imrt.iss.dto.search;

import java.util.Arrays;
import java.util.Optional;

public enum SearchProperty {
    ITEM_ID(SearchFields.ITEM_ID, "id", "item"),
    INTENDED_GRADE(SearchFields.GRADE, "grade", "item", true),
    SUBJECT(SearchFields.SUBJECT, "subject", "item", true),
    DOK(SearchFields.DOK, "dok", "item", true),
    WORKFLOW_STATUS(SearchFields.WORKFLOW_STATUS, "workflow_status", "item", true),
    ITEM_TYPE(SearchFields.ITEM_TYPE, "item_type", "item", true),
    STIMULUS_ID(SearchFields.STIMULUS_ID, "associated_stimulus_id", "item"),
    DAYS_IN_WORKFLOW_STATUS(SearchFields.DAYS_IN_WORKFLOW_STATUS, "workflow_status_set_at", "item"),
    BEING_CREATED(SearchFields.BEING_CREATED, "is_being_created", "item"),
    ORGANIZATION_TYPE_ID(SearchFields.ORG_TYPE_ID, "organization_type_id", "item", true),
    ORGANIZATION_NAME(SearchFields.ORG_NAME, "organization_name", "item", true),
    CONTENT_TASK_MODEL(SearchFields.CONTENT_TASK_MODEL, "content_task_model", "item"),
    ITEM_AUTHOR(SearchFields.ITEM_AUTHOR, "item_author", "item", true),
    WORKFLOW_STATUS_UPDATE_DATE(SearchFields.WORKFLOW_STATUS_UPDATE_DATE, "workflow_status_set_at", "item"),
    CREATE_DATE(SearchFields.CREATE_DATE, "item_created_at", "item"),
    CREATED_BY(SearchFields.CREATED_BY, "item_created_by", "item"),
    CALCULATED_FORM_COUNT(SearchFields.CALCULATED_FORM_COUNT, "form_count", "item"),
    CALCULATED_EXPOSURES_COUNT(SearchFields.CALCULATED_EXPOSURES_COUNT, "exposures_count", "item"),
    ITEM_DIFFICULTY_QUINTILE(SearchFields.ITEM_DIFFICULTY_QUINTILE, "item_difficulty_quintile", "item", true),
    ASL_REQUIRED(SearchFields.ASL_REQUIRED, "asl_required", "item"),
    ASL_PROVIDED(SearchFields.ASL_PROVIDED, "asl_provided", "item"),
    BRAILLE_REQUIRED(SearchFields.BRAILLE_REQUIRED, "braille_required", "item"),
    BRAILLE_PROVIDED(SearchFields.BRAILLE_PROVIDED, "braille_provided", "item"),
    CC_REQUIRED(SearchFields.CC_REQUIRED, "cc_required", "item"),
    CC_PROVIDED(SearchFields.CC_PROVIDED, "cc_provided", "item"),
    TRANSLATION_REQUIRED(SearchFields.TRANSLATION_REQUIRED, "translation_required", "item"),
    TRANSLATION_PROVIDED(SearchFields.TRANSLATION_PROVIDED, "translation_provided", "item"),
    TTS_SIGHT_PROVIDED(SearchFields.TTS_SIGHT_PROVIDED, "sight_tts_provided", "item"),
    TTS_VISUAL_PROVIDED(SearchFields.TTS_VISUAL_PROVIDED, "visual_tts_provided", "item"),
    TTS_VISUAL_REQUIRED(SearchFields.TTS_VISUAL_REQUIRED, "visual_tts_required", "item"),
    WRITING_PURPOSE(SearchFields.WRITING_PURPOSE, "writing_purpose", "item"),
    PERFORMANCE_TASK(SearchFields.PERFORMANCE_TASK, "performance_task", "item"),
    FORM_TYPE(SearchFields.FORM_TYPE, "form_type", "item_form"),
    ASSESSMENT_TYPE(SearchFields.ASSESSMENT_TYPE, "assessment_type", "item_form"),
    TEST_CATEGORY(SearchFields.TEST_CATEGORY, "test_category", "item", true),
    ENGLISH_CONTENT_LAST_UPDATED_DATE(SearchFields.ENGLISH_CONTENT_LAST_UPDATED_DATE, "english_content_last_updated_at", "item"),
    SPANISH_CONTENT_LAST_UPDATED_DATE(SearchFields.SPANISH_CONTENT_LAST_UPDATED_DATE, "spanish_content_last_updated_at", "item"),
    SCORING_ENGINE(SearchFields.SCORING_ENGINE, "scoring_engine", "item"),
    ALLOW_CALCULATOR(SearchFields.ALLOW_CALCULATOR, "allow_calculator", "item"),
    UPDATED_DATE(SearchFields.UPDATED_DATE, "updated_at", "item"),
    ASL_UPLOADED_PRIOR_TO_LAST_CONTENT_UPDATE(SearchFields.ASL_UPLOADED_PRIOR_TO_LAST_CONTENT_UPDATE, "asl_uploaded_prior_to_last_content_update", "item"),
    BRAILLE_UPLOADED_PRIOR_TO_LAST_CONTENT_UPDATE(SearchFields.BRAILLE_UPLOADED_PRIOR_TO_LAST_CONTENT_UPDATE, "braille_uploaded_prior_to_last_content_update", "item"),
    CLOSED_CAPTIONING_UPLOADED_PRIOR_TO_LAST_CONTENT_UPDATE(SearchFields.CLOSED_CAPTIONING_UPLOADED_PRIOR_TO_LAST_CONTENT_UPDATE, "braille_uploaded_prior_to_last_content_update", "item"),
    PRIMARY_CLAIM(SearchFields.PRIMARY_CLAIM, "primary_claim", "item", true),
    PRIMARY_TARGET(SearchFields.PRIMARY_TARGET, "primary_target", "item", true),
    PRIMARY_CONTENT_DOMAIN(SearchFields.PRIMARY_CONTENT_DOMAIN, "primary_content_domain", "item", true),
    PRIMARY_COMMON_CORE_STANDARD(SearchFields.PRIMARY_COMMON_CORE_STANDARD, "primary_common_core_standard", "item", true),
    SECONDARY_CLAIM(SearchFields.SECONDARY_CLAIM, "secondary_claim", "item", true),
    SECONDARY_TARGET(SearchFields.SECONDARY_TARGET, "secondary_target", "item", true),
    SECONDARY_CONTENT_DOMAIN(SearchFields.SECONDARY_CONTENT_DOMAIN, "secondary_content_domain", "item", true),
    SECONDARY_COMMON_CORE_STANDARD(SearchFields.SECONDARY_COMMON_CORE_STANDARD, "secondary_common_core_standard", "item", true),
    TERTIARY_CLAIM(SearchFields.TERTIARY_CLAIM, "tertiary_claim", "item", true),
    TERTIARY_TARGET(SearchFields.TERTIARY_TARGET, "tertiary_target", "item", true),
    TERTIARY_CONTENT_DOMAIN(SearchFields.TERTIARY_CONTENT_DOMAIN, "tertiary_content_domain", "item", true),
    TERTIARY_COMMON_CORE_STANDARD(SearchFields.TERTIARY_COMMON_CORE_STANDARD, "tertiary_common_core_standard", "item", true),
    QUATERNARY_CLAIM(SearchFields.QUATERNARY_CLAIM, "quaternary_claim", "item", true),
    QUATERNARY_TARGET(SearchFields.QUATERNARY_TARGET, "quaternary_target", "item", true),
    QUATERNARY_CONTENT_DOMAIN(SearchFields.QUATERNARY_CONTENT_DOMAIN, "quaternary_content_domain", "item", true),
    QUATERNARY_COMMON_CORE_STANDARD(SearchFields.QUATERNARY_COMMON_CORE_STANDARD, "quaternary_common_core_standard", "item", true);

    private final String property;
    private final String columnName;
    private final String table;
    private final boolean supportsCounts;

    SearchProperty(final String property, final String columnName, final String table) {
        this(property, columnName, table, false);
    }

    SearchProperty(final String property, final String columnName, final String table, boolean supportsCounts) {
        this.property = property;
        this.columnName = columnName;
        this.table = table;
        this.supportsCounts = supportsCounts;
    }

    public String getProperty() {
        return property;
    }

    public String getColumnName() {
        return columnName;
    }

    public String getTable() {
        return table;
    }

    public boolean isSupportsCounts() {
        return supportsCounts;
    }

    public static Optional<SearchProperty> propertyValueOf(final String searchProperty) {
        return Arrays.stream(values())
                .filter(property -> property.getProperty().equals(searchProperty))
                .findAny();
    }

    @Override
    public String toString() {
        return "SearchProperty{" +
                "property='" + property + '\'' +
                ", columnName='" + columnName + '\'' +
                ", table='" + table + '\'' +
                ", supportsCounts=" + supportsCounts +
                "} " + super.toString();
    }
}