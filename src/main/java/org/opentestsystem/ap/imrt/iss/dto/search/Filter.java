package org.opentestsystem.ap.imrt.iss.dto.search;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;

import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.ASL_PROVIDED;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.ASL_REQUIRED;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.ASSESSMENT_TYPE;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.BEING_CREATED;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.BRAILLE_PROVIDED;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.BRAILLE_REQUIRED;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.CALCULATED_EXPOSURES_COUNT;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.CALCULATED_FORM_COUNT;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.CC_PROVIDED;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.CC_REQUIRED;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.CONTENT_TASK_MODEL;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.CREATED_BY;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.CREATE_DATE;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.DAYS_IN_WORKFLOW_STATUS;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.DOK;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.ENGLISH_CONTENT_LAST_UPDATED_DATE;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.FORM_TYPE;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.GRADE;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.ITEM_AUTHOR;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.ITEM_DIFFICULTY_QUINTILE;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.ITEM_ID;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.ITEM_TYPE;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.ORG_NAME;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.ORG_TYPE_ID;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.PERFORMANCE_TASK;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.PRIMARY_CLAIM;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.PRIMARY_COMMON_CORE_STANDARD;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.PRIMARY_CONTENT_DOMAIN;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.PRIMARY_TARGET;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.QUATERNARY_CLAIM;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.QUATERNARY_COMMON_CORE_STANDARD;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.QUATERNARY_CONTENT_DOMAIN;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.QUATERNARY_TARGET;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.SECONDARY_CLAIM;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.SECONDARY_COMMON_CORE_STANDARD;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.SECONDARY_CONTENT_DOMAIN;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.SECONDARY_TARGET;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.STIMULUS_ID;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.SUBJECT;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.TERTIARY_CLAIM;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.TERTIARY_COMMON_CORE_STANDARD;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.TERTIARY_CONTENT_DOMAIN;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.TERTIARY_TARGET;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.TEST_CATEGORY;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.TRANSLATION_PROVIDED;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.TRANSLATION_REQUIRED;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.TTS_SIGHT_PROVIDED;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.TTS_VISUAL_PROVIDED;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.TTS_VISUAL_REQUIRED;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.WORKFLOW_STATUS;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.WORKFLOW_STATUS_UPDATE_DATE;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchFields.WRITING_PURPOSE;

/**
 * Represents a general filter
 */
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "property", visible = true)
@JsonSubTypes({
        @JsonSubTypes.Type(value = MatchFilter.class, name = ITEM_ID),
        @JsonSubTypes.Type(value = MatchFilter.class, name = GRADE),
        @JsonSubTypes.Type(value = MatchFilter.class, name = SUBJECT),
        @JsonSubTypes.Type(value = MatchFilter.class, name = DOK),
        @JsonSubTypes.Type(value = MatchFilter.class, name = WORKFLOW_STATUS),
        @JsonSubTypes.Type(value = MatchFilter.class, name = ITEM_TYPE),
        @JsonSubTypes.Type(value = MatchFilter.class, name = STIMULUS_ID),
        @JsonSubTypes.Type(value = MatchFilter.class, name = ORG_TYPE_ID),
        @JsonSubTypes.Type(value = MatchFilter.class, name = ASL_PROVIDED),
        @JsonSubTypes.Type(value = MatchFilter.class, name = ASL_REQUIRED),
        @JsonSubTypes.Type(value = MatchFilter.class, name = BRAILLE_PROVIDED),
        @JsonSubTypes.Type(value = MatchFilter.class, name = BRAILLE_REQUIRED),
        @JsonSubTypes.Type(value = MatchFilter.class, name = CC_PROVIDED),
        @JsonSubTypes.Type(value = MatchFilter.class, name = CC_REQUIRED),
        @JsonSubTypes.Type(value = MatchFilter.class, name = TRANSLATION_PROVIDED),
        @JsonSubTypes.Type(value = MatchFilter.class, name = TRANSLATION_REQUIRED),
        @JsonSubTypes.Type(value = MatchFilter.class, name = PRIMARY_CLAIM),
        @JsonSubTypes.Type(value = MatchFilter.class, name = PRIMARY_TARGET),
        @JsonSubTypes.Type(value = MatchFilter.class, name = SECONDARY_CLAIM),
        @JsonSubTypes.Type(value = MatchFilter.class, name = SECONDARY_TARGET),
        @JsonSubTypes.Type(value = MatchFilter.class, name = QUATERNARY_CLAIM),
        @JsonSubTypes.Type(value = MatchFilter.class, name = QUATERNARY_TARGET),
        @JsonSubTypes.Type(value = MatchFilter.class, name = TERTIARY_CLAIM),
        @JsonSubTypes.Type(value = MatchFilter.class, name = TERTIARY_TARGET),
        @JsonSubTypes.Type(value = MatchFilter.class, name = WRITING_PURPOSE),
        @JsonSubTypes.Type(value = MatchFilter.class, name = PERFORMANCE_TASK),
        @JsonSubTypes.Type(value = MatchFilter.class, name = TTS_VISUAL_REQUIRED),
        @JsonSubTypes.Type(value = MatchFilter.class, name = FORM_TYPE),
        @JsonSubTypes.Type(value = MatchFilter.class, name = ASSESSMENT_TYPE),
        @JsonSubTypes.Type(value = MatchFilter.class, name = TEST_CATEGORY),
        @JsonSubTypes.Type(value = IntegerRangeFilter.class, name = DAYS_IN_WORKFLOW_STATUS),
        @JsonSubTypes.Type(value = IntegerRangeFilter.class, name = CALCULATED_FORM_COUNT),
        @JsonSubTypes.Type(value = IntegerRangeFilter.class, name = CALCULATED_EXPOSURES_COUNT),
        @JsonSubTypes.Type(value = IntegerRangeFilter.class, name = ITEM_DIFFICULTY_QUINTILE),
        @JsonSubTypes.Type(value = BooleanFlagFilter.class, name = BEING_CREATED),
        @JsonSubTypes.Type(value = ContainsFilter.class, name = ORG_NAME),
        @JsonSubTypes.Type(value = ContainsFilter.class, name = CONTENT_TASK_MODEL),
        @JsonSubTypes.Type(value = ContainsFilter.class, name = ITEM_AUTHOR),
        @JsonSubTypes.Type(value = ContainsFilter.class, name = CREATED_BY),
        @JsonSubTypes.Type(value = ContainsFilter.class, name = PRIMARY_COMMON_CORE_STANDARD),
        @JsonSubTypes.Type(value = ContainsFilter.class, name = SECONDARY_COMMON_CORE_STANDARD),
        @JsonSubTypes.Type(value = ContainsFilter.class, name = TERTIARY_COMMON_CORE_STANDARD),
        @JsonSubTypes.Type(value = ContainsFilter.class, name = QUATERNARY_COMMON_CORE_STANDARD),
        @JsonSubTypes.Type(value = ContainsFilter.class, name = PRIMARY_CONTENT_DOMAIN),
        @JsonSubTypes.Type(value = ContainsFilter.class, name = SECONDARY_CONTENT_DOMAIN),
        @JsonSubTypes.Type(value = ContainsFilter.class, name = TERTIARY_CONTENT_DOMAIN),
        @JsonSubTypes.Type(value = ContainsFilter.class, name = QUATERNARY_CONTENT_DOMAIN),
        @JsonSubTypes.Type(value = DateRangeFilter.class, name = WORKFLOW_STATUS_UPDATE_DATE),
        @JsonSubTypes.Type(value = DateRangeFilter.class, name = CREATE_DATE),
        @JsonSubTypes.Type(value = DateRangeFilter.class, name = ENGLISH_CONTENT_LAST_UPDATED_DATE),
        @JsonSubTypes.Type(value = BooleanFlagFilter.class, name = TTS_SIGHT_PROVIDED),
        @JsonSubTypes.Type(value = BooleanFlagFilter.class, name = TTS_VISUAL_PROVIDED)
})
public abstract class Filter {
    private final String property;
    private final boolean includeBlanks;

    protected Filter(final String property, final boolean includeBlanks) {
        this.property = property;
        this.includeBlanks = includeBlanks;
    }

    /**
     * @return the property to filter search results
     */
    public String getProperty() {
        return property;
    }

    /**
     * @return the type code for the type of filter (e.g. "match")
     */
    public abstract String getType();

    /**
     * @return {@code true} to include blank values
     */
    public boolean isIncludeBlanks() {
        return includeBlanks;
    }
}
