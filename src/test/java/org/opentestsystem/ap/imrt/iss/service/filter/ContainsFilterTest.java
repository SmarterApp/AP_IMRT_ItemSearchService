package org.opentestsystem.ap.imrt.iss.service.filter;

import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.runner.RunWith;
import org.mockito.runners.MockitoJUnitRunner;
import org.opentestsystem.ap.imrt.iss.dto.search.ContainsFilter;

import java.util.Collections;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(MockitoJUnitRunner.class)
public class ContainsFilterTest {
    @Rule
    public ExpectedException expectedException = ExpectedException.none();

    @Test
    public void shouldNotBuildContainsFilterWithNullValues() {
        expectedException.expect(IllegalArgumentException.class);
        expectedException.expectMessage("values cannot be null");

        new ContainsFilter("test", null);
    }

    @Test
    public void shouldNotBuildContainsFilterWithEmptyListOfValues() {
        expectedException.expect(IllegalArgumentException.class);
        expectedException.expectMessage("values cannot be empty; at least one value must be provided");

        new ContainsFilter("test", Collections.emptyList());
    }

    @Test
    public void shouldCreateAContainsFilter() {
        final ContainsFilter result = new ContainsFilter("test", Collections.singletonList("some value"));

        assertThat(result.getValues()).hasSize(1);
    }
}
