package org.opentestsystem.ap.imrt.iss.repository;

import org.opentestsystem.ap.imrt.common.model.BaseItem;
import org.opentestsystem.ap.imrt.common.model.Stimulus;
import org.opentestsystem.ap.imrt.iss.dto.ItemSearchResult;
import org.opentestsystem.ap.imrt.iss.dto.ItemSearchResultBuilder;

import static org.apache.logging.log4j.core.config.plugins.Plugin.EMPTY;

class ItemSearchResultConverter {
    static ItemSearchResult convert(BaseItem item) {
        ItemSearchResultBuilder builder = ItemSearchResult.builder()
                .withDepthOfKnowledge(item.getDepthOfKnowledge())
                .withIntendedGrade(item.getGrade())
                .withId(String.valueOf(item.getId()))
                .withCreateDate(item.getItemCreatedAt())
                .withCreatedBy(item.getItemCreatedBy())
                .withType(item.getItemType())
                .withSubject(item.getSubject())
                .withStimulusId(item.getAssociatedStimulusId() == null ? EMPTY : String.valueOf(item.getAssociatedStimulusId()))
                .withBeingCreated(convertToString(item.isBeingCreated()))
                .withWorkflowStatus(item.getWorkflowStatus())
                .withOrganizationTypeId(item.getOrganizationTypeId())
                .withOrganizationName(item.getOrganizationName())
                .withPrimaryTarget(item.getPrimaryTarget())
                .withPrimaryClaim(item.getPrimaryClaim())
                .withPrimaryCommonCoreStandard(item.getPrimaryCommonCoreStandard())
                .withPrimaryContentDomain(item.getPrimaryContentDomain())
                .withSecondaryTarget(item.getSecondaryTarget())
                .withSecondaryClaim(item.getSecondaryClaim())
                .withSecondaryCommonCoreStandard(item.getSecondaryCommonCoreStandard())
                .withSecondaryContentDomain(item.getSecondaryContentDomain())
                .withTertiaryTarget(item.getTertiaryTarget())
                .withTertiaryClaim(item.getTertiaryClaim())
                .withTertiaryCommonCoreStandard(item.getTertiaryCommonCoreStandard())
                .withTertiaryContentDomain(item.getTertiaryContentDomain())
                .withQuaternaryTarget(item.getQuaternaryTarget())
                .withQuaternaryClaim(item.getQuaternaryClaim())
                .withQuaternaryCommonCoreStandard(item.getQuaternaryCommonCoreStandard())
                .withQuaternaryContentDomain(item.getQuaternaryContentDomain())
                .withContentTaskModel(item.getContentTaskModel())
                .withItemAuthor(item.getItemAuthor())
                .withItemDifficultyQuintile(convertToString(item.getItemDifficultyQuintile()))
                .withWorkflowStatusUpdatedDate(item.getWorkflowStatusSetAt())
                .withAslRequired(item.getAslRequired())
                .withAslProvided(item.getAslProvided())
                .withBrailleRequired(item.getBrailleRequired())
                .withBrailleProvided(item.getBrailleProvided())
                .withClosedCaptioningRequired(item.getCcRequired())
                .withClosedCaptioningProvided(item.getCcProvided())
                .withTranslationRequired(item.getTranslationRequired())
                .withTranslationProvided(item.getTranslationProvided())
                .withWritingPurpose(item.getWritingPurpose())
                .withPerformanceTask(item.getPerformanceTask())
                .withSightTtsProvided(convertToString(item.getSightTtsProvided()))
                .withVisualTtsProvided(convertToString(item.getVisualTtsProvided()))
                .withVisualTtsRequired(item.getVisualTtsRequired())
                .withTestCategory(item.getTestCategory())
                .withEnglishContentLastUpdatedDate(item.getEnglishContentLastUpdatedAt())
                .withSpanishContentLastUpdatedDate(item.getSpanishContentLastUpdatedAt())
                .withAllowCalculator(item.getAllowCalculator())
                .withUpdateDate(item.getUpdatedAt())
                .withScoringEngine(item.getScoringEngine())
                .withAslUploadedPriorToLastContentUpdate(convertToString(item.getAslUploadedPriorToLastContentUpdate()))
                .withBrailleUploadedPriorToLastContentUpdate(convertToString(item.getBrailleUploadedPriorToLastContentUpdate()))
                .withAssociatedItemCount(mapAssociatedItemCount(item))
                .withSpanishPassagesCount(convertToString(item.getSpanishPassagesCount()))
                .withEnglishPassagesCount(convertToString(item.getEnglishPassagesCount()))
                .withContentChangedAfterOperational(convertToString(item.isContentChangedAfterOperational()))
                .withClosedCaptioningUploadedPriorToLastContentUpdate(convertToString(item.getClosedCaptioningUploadedPriorToLastContentUpdate()))
                .withUnresolvedUpdateNeed(convertToString(item.isUnresolvedUpdateNeed()))
                .withCurrentUpdateNeedCreatedDate(item.getCurrentUpdateNeedCreateDate())
                .withCurrentUpdateNeedInternalResolution(item.getCurrentUpdateNeedInternalResolution())
                .withCurrentUpdateNeedInternalResolutionDate(item.getCurrentUpdateNeedInternalResolutionDate())
                .withCurrentUpdateNeedResolution(item.getCurrentUpdateNeedResolution())
                .withCurrentUpdateNeedResolutionDate(item.getCurrentUpdateNeedResolutionDate())
                .withCalculatedFormCount(convertToString(item.getFormCount()))
                .withCalculatedExposuresCount(convertToString(item.getExposuresCount()))
                .withEnglishGlossaryProvided(convertToString(item.isEnglishGlossaryProvided()))
                .withIllustratedGlossaryProvided(convertToString(item.isIllustratedGlossaryProvided()))
                .withIllustratedGlossaryRequired(item.getIllustratedGlossaryRequired())
                .withTranslatedGlossaryProvided(convertToString(item.isTranslatedGlossaryProvided()))
                .withTranslatedGlossaryRequired(item.getTranslatedGlossaryRequired())
                .withSevereValidationResultCount(convertToString(item.getSevereValidationResultCount()))
                .withDegradedValidationResultCount(convertToString(item.getDegradedValidationResultCount()))
                .withTolerableValidationResultCount(convertToString(item.getTolerableValidationResultCount()))
                .withBenignValidationResultCount(convertToString(item.getBenignValidationResultCount()));

        return builder.build();
    }

    private static String convertToString(Object obj) {
        if (obj == null) {
            return EMPTY;
        }

        return obj.toString();
    }

    private static String mapAssociatedItemCount(BaseItem baseItem) {
        if (!(baseItem instanceof Stimulus)) {
            return "0";
        }

        Stimulus stimulus = (Stimulus) baseItem;

        if (stimulus.getAssociatedItems() == null) {
            return "0";
        }

        return String.valueOf(stimulus.getAssociatedItems().size());
    }
}
