package org.opentestsystem.ap.imrt.iss.model;

import org.junit.Test;

import java.util.Collections;
import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;
import static org.opentestsystem.ap.imrt.iss.dto.search.SearchProperty.SUBJECT;

public class MatchSearchFilterTest {
    @Test
    @SuppressWarnings("unchecked")
    public void shouldCreateQueryForValues() {
        MatchSearchFilter filter = new MatchSearchFilter(SUBJECT, Collections.singletonList("3"));

        FilterQuery query = filter.getFilterQuery();

        assertThat(query.getQuery()).isEqualTo("subject IN (:subject) ");
        assertThat(query.getMapSqlProperties()).containsKeys(SUBJECT.getProperty());
        assertThat((List) query.getMapSqlProperties().get(SUBJECT.getProperty())).containsExactly("3");
    }

    @Test
    @SuppressWarnings("unchecked")
    public void shouldCreateQueryForValuesIncludingBlank() {
        MatchSearchFilter filter = new MatchSearchFilter(SUBJECT, Collections.singletonList("3"), true);

        FilterQuery query = filter.getFilterQuery();

        assertThat(query.getQuery()).isEqualTo("subject IN (:subject) ");

        assertThat(((List<String>) query.getMapSqlProperties().get(SUBJECT.getProperty()))).containsExactly("3", "");
    }
}