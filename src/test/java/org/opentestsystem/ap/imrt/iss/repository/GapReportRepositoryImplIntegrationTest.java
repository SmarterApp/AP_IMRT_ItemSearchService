package org.opentestsystem.ap.imrt.iss.repository;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.ap.imrt.iss.ItemSearchServiceApplicationConfiguration;
import org.opentestsystem.ap.imrt.iss.dto.search.SearchProperty;
import org.opentestsystem.ap.imrt.iss.model.MatchSearchFilter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.Import;
import org.springframework.data.jpa.repository.config.EnableJpaAuditing;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.transaction.annotation.Transactional;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Map;

import static org.assertj.core.api.Java6Assertions.assertThat;

@RunWith(SpringRunner.class)
@SpringBootTest
@Transactional
@Import(ItemSearchServiceApplicationConfiguration.class)
@EnableJpaAuditing
public class GapReportRepositoryImplIntegrationTest {
    @Autowired
    private GapReportRepository gapReportRepository;

    @Test
    public void shouldGetGapReport() {
        final MatchSearchFilter subjectMatchFilter =
                new MatchSearchFilter(SearchProperty.SUBJECT, Collections.singletonList("ELA"));
        final List<SearchProperty> searchProperties =
                Arrays.asList(SearchProperty.SUBJECT, SearchProperty.INTENDED_GRADE, SearchProperty.ITEM_TYPE);

        final List<Map<String, Object>> result =
                gapReportRepository.getGapReport(Collections.singletonList(subjectMatchFilter), searchProperties);

        assertThat(result).isNotNull();
    }
}
