package org.opentestsystem.ap.imrt.iss.dto.search;

import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.runner.RunWith;
import org.mockito.runners.MockitoJUnitRunner;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(MockitoJUnitRunner.class)
public class NumberOfDaysRangeFilterTest {
    @Rule
    public ExpectedException expectedException = ExpectedException.none();

    @Test
    public void shouldNotBuildNewIntegerRangeFilterWhenMinIsGreaterThanMax() {
        expectedException.expect(IllegalArgumentException.class);
        expectedException.expectMessage("min value cannot be greater than max value");

        new NumberOfDaysRangeFilter("createdAt", 10, 1);
    }

    @Test
    public void shouldBuildNewNumberOfDaysRangeFilterWithMinAndMaxValues() {
        final NumberOfDaysRangeFilter filter = new NumberOfDaysRangeFilter("createdAt", 1, 5);

        assertThat(filter.getMax()).isPresent();
    }

    @Test
    public void shouldBuildNewNumberOfDaysRangeFilterWithOnlyMaxValue() {
        final NumberOfDaysRangeFilter filter = new NumberOfDaysRangeFilter("createdAt", 5, null);

        assertThat(filter.getMax()).isNotPresent();
    }

    @Test
    public void nullValuesShouldBeEmpty() {
        NumberOfDaysRangeFilter filter = new NumberOfDaysRangeFilter("createdAt", null, null);
        assertThat(filter.isEmpty()).isTrue();
    }
}
