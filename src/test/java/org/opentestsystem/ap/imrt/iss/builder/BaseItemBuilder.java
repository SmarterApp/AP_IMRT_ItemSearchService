package org.opentestsystem.ap.imrt.iss.builder;

import org.opentestsystem.ap.common.model.EqItem;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.imrt.common.model.Attachment;
import org.opentestsystem.ap.imrt.common.model.BaseItem;
import org.opentestsystem.ap.imrt.common.model.Form;
import org.opentestsystem.ap.imrt.common.model.ValidationResult;

import java.time.Instant;
import java.util.Collections;
import java.util.Set;

import static org.apache.commons.lang3.StringUtils.EMPTY;

@SuppressWarnings("unchecked")
public abstract class BaseItemBuilder<B extends BaseItemBuilder, T extends BaseItem> extends BaseEntityBuilder<BaseItem> {
    private Integer key = 1;
    private Integer id = 12345;
    private String subject = "ELA";
    private String grade = "3";
    private String workflowStatus = "Draft";
    private String itemType = "EQ";
    private String depthOfKnowledge = "dok";
    private String itemCreatedBy = "me";
    private Instant itemCreatedAt = Instant.now();
    private Item itemJson = new EqItem("12345");
    private Instant workflowStatusSetAt = Instant.now();
    private String organizationTypeId = "smarterBalanced";
    private String organizationName = "SB";
    private Integer associatedStimulusId = 222333;
    private String primaryClaim = "1";
    private String primaryTarget = "T-1";
    private String primaryContentDomain = "CNT-123";
    private String primaryCommonCoreStandard = "CST1";
    private String secondaryClaim = "2";
    private String secondaryTarget = "T-2";
    private String secondaryContentDomain = "CNT-456";
    private String secondaryCommonCoreStandard = "CST2";
    private String tertiaryClaim = "3";
    private String tertiaryTarget = "T-3";
    private String tertiaryContentDomain = "CNT-789";
    private String tertiaryCommonCoreStandard = "CST3";
    private String quaternaryClaim = "4";
    private String quaternaryTarget = "T-4";
    private String quaternaryContentDomain = "CNT-999";
    private String quaternaryCommonCoreStandard = "CST4";
    private String contentTaskModel = "999";
    private String itemAuthor = "An User";
    private Integer exposuresCount = 100;
    private Integer formCount = 4;
    private Integer itemDifficultyQuintile = 2;
    private String aslRequired = "true";
    private String aslProvided = "true";
    private String brailleRequired = "undetermined";
    private String brailleProvided = "false";
    private String closedCaptioningRequired = "false";
    private String closedCaptioningProvided = "false";
    private String translationRequired = "undetermined";
    private String translationProvided = "false";
    private Set<Attachment> attachments = Collections.emptySet();
    private String writingPurpose = "Narrative";
    private String performanceTask = "No";
    private Boolean sightTtsProvided;
    private Boolean visualTtsProvided;
    private String visualTtsRequired = EMPTY;
    private String testCategory = "Interim";
    private Instant englishContentLastUpdatedAt = Instant.now();
    private Instant spanishContentLastUpdatedAt = Instant.now();
    private String scoringEngine = "HandScored";
    private String allowCalculator = "Neutral";
    private boolean aslUploadedPriorToLastContentUpdate = true;
    private boolean brailleUploadedPriorToLastContentUpdate = true;
    private boolean closedCaptioningUploadedPriorToLastContentUpdate = true;
    private boolean isBeingCreated = true;
    private String ccRequired = "no";
    private String ccProvided = "no";

    private Boolean isSightTtsProvided = false;
    private Boolean isVisualTtsProvided = false;
    private Set<Form> forms = Collections.emptySet();
    private Set<ValidationResult> validationResults = Collections.emptySet();
    private int englishPassagesCount;
    private int spanishPassagesCount;
    private boolean contentChangedAfterOperational = true;
    private Instant dateStatusSetToOperational = null;

    private boolean unresolvedUpdateNeed = false;
    private Instant currentUpdateNeedCreateDate = Instant.now();
    private Instant currentUpdateNeedResolutionDate = Instant.now();
    private Instant currentUpdateNeedInternalResolutionDate = Instant.now();
    private String currentUpdateNeedResolution = "Do not score";
    private String currentUpdateNeedInternalResolution = "Do not score";

    public B withKey(Integer key) {
        this.key = key;
        return (B) this;
    }

    public B withId(Integer id) {
        this.id = id;
        return (B) this;
    }

    public B withSubject(String subject) {
        this.subject = subject;
        return (B) this;
    }

    public B withGrade(String grade) {
        this.grade = grade;
        return (B) this;
    }

    public B withWorkflowStatus(String workflowStatus) {
        this.workflowStatus = workflowStatus;
        return (B) this;
    }

    public B withItemType(String itemType) {
        this.itemType = itemType;
        return (B) this;
    }

    public B withDepthOfKnowledge(String depthOfKnowledge) {
        this.depthOfKnowledge = depthOfKnowledge;
        return (B) this;
    }

    public B withItemCreatedBy(String createdBy) {
        this.itemCreatedBy = createdBy;
        return (B) this;
    }

    public B withItemCreatedAt(Instant itemCreatedAt) {
        this.itemCreatedAt = itemCreatedAt;
        return (B) this;
    }

    public B withItemJson(Item item) {
        this.itemJson = item;
        return (B) this;
    }

    public B withAssociatedStimulusId(Integer associatedStimulusId) {
        this.associatedStimulusId = associatedStimulusId;
        return (B) this;
    }

    public B withWorkflowStatusSetAt(Instant workflowStatusSetAt) {
        this.workflowStatusSetAt = workflowStatusSetAt;
        return (B) this;
    }

    public B withOrganizationTypeId(String organizationTypeId) {
        this.organizationTypeId = organizationTypeId;
        return (B) this;
    }

    public B withOrganizationName(String organizationName) {
        this.organizationName = organizationName;
        return (B) this;
    }

    public B withIsBeingCreated(boolean isBeingCreated) {
        this.isBeingCreated = isBeingCreated;
        return (B) this;
    }

    public B withPrimaryClaim(String primaryClaim) {
        this.primaryClaim = primaryClaim;
        return (B) this;
    }

    public B withPrimaryTarget(String primaryTarget) {
        this.primaryTarget = primaryTarget;
        return (B) this;
    }

    public B withPrimaryContentDomain(String primaryContentDomain) {
        this.primaryContentDomain = primaryContentDomain;
        return (B) this;
    }

    public B withPrimaryCommonCoreStandard(String primaryCommonCoreStandard) {
        this.primaryCommonCoreStandard = primaryCommonCoreStandard;
        return (B) this;
    }

    public B withSecondaryClaim(String secondaryClaim) {
        this.secondaryClaim = secondaryClaim;
        return (B) this;
    }

    public B withSecondaryTarget(String secondaryTarget) {
        this.secondaryTarget = secondaryTarget;
        return (B) this;
    }

    public B withSecondaryContentDomain(String secondaryContentDomain) {
        this.secondaryContentDomain = secondaryContentDomain;
        return (B) this;
    }

    public B withSecondaryCommonCoreStandard(String secondaryCommonCoreStandard) {
        this.secondaryCommonCoreStandard = secondaryCommonCoreStandard;
        return (B) this;
    }

    public B withTertiaryClaim(String tertiaryClaim) {
        this.tertiaryClaim = tertiaryClaim;
        return (B) this;
    }

    public B withTertiaryTarget(String tertiaryTarget) {
        this.tertiaryTarget = tertiaryTarget;
        return (B) this;
    }

    public B withTertiaryContentDomain(String tertiaryContentDomain) {
        this.tertiaryContentDomain = tertiaryContentDomain;
        return (B) this;
    }

    public B withTertiaryCommonCoreStandard(String tertiaryCommonCoreStandard) {
        this.tertiaryCommonCoreStandard = tertiaryCommonCoreStandard;
        return (B) this;
    }

    public B withQuaternaryClaim(String quaternaryClaim) {
        this.quaternaryClaim = quaternaryClaim;
        return (B) this;
    }

    public B withQuaternaryTarget(String quaternaryTarget) {
        this.quaternaryTarget = quaternaryTarget;
        return (B) this;
    }

    public B withQuaternaryContentDomain(String quaternaryContentDomain) {
        this.quaternaryContentDomain = quaternaryContentDomain;
        return (B) this;
    }

    public B withQuaternaryCommonCoreStandard(String quaternaryCommonCoreStandard) {
        this.quaternaryCommonCoreStandard = quaternaryCommonCoreStandard;
        return (B) this;
    }

    public B withContentTaskModel(String contentTaskModel) {
        this.contentTaskModel = contentTaskModel;
        return (B) this;
    }

    public B withItemAuthor(final String itemAuthor) {
        this.itemAuthor = itemAuthor;
        return (B) this;
    }

    public B withAslRequired(final String aslRequired) {
        this.aslRequired = aslRequired;
        return (B) this;
    }

    public B withAslProvided(final String aslProvided) {
        this.aslProvided = aslProvided;
        return (B) this;
    }

    public B withBrailleRequired(final String brailleRequired) {
        this.brailleRequired = brailleRequired;
        return (B) this;
    }

    public B withBrailleProvided(final String brailleProvided) {
        this.brailleProvided = brailleProvided;
        return (B) this;
    }

    public B withCcRequired(final String ccRequired) {
        this.ccRequired = ccRequired;
        return (B) this;
    }

    public B withCcProvided(final String ccProvided) {
        this.ccProvided = ccProvided;
        return (B) this;
    }

    public B withTranslationRequired(final String translationRequired) {
        this.translationRequired = translationRequired;
        return (B) this;
    }

    public B withTranslationProvided(final String translationProvided) {
        this.translationProvided = translationProvided;
        return (B) this;
    }

    public B withAttachments(final Set<Attachment> attachments) {
        this.attachments = attachments;
        return (B) this;
    }

    public B withItemDifficultyQuintile(final Integer itemDifficultyQuintile) {
        this.itemDifficultyQuintile = itemDifficultyQuintile;
        return (B) this;
    }

    public B withExposuresCount(final Integer exposuresCount) {
        this.exposuresCount = exposuresCount;
        return (B) this;
    }

    public B withPerformanceTask(final String performanceTask) {
        this.performanceTask = performanceTask;
        return (B) this;
    }

    public B withWritingPurpose(final String writingPurpose) {
        this.writingPurpose = writingPurpose;
        return (B) this;
    }

    public B withSightTtsProvided(final Boolean sightTtsProvided) {
        this.isSightTtsProvided = sightTtsProvided;
        return (B) this;
    }

    public B withVisualTtsProvided(final Boolean visualTtsProvided) {
        this.isVisualTtsProvided = visualTtsProvided;
        return (B) this;
    }

    public B withVisualTtsRequired(final String visualTtsRequired) {
        this.visualTtsRequired = visualTtsRequired;
        return (B) this;
    }

    public B withForms(final Set<Form> forms) {
        this.forms = forms;
        return (B) this;
    }

    public B withTestCategory(final String testCategory) {
        this.testCategory = testCategory;
        return (B) this;
    }

    public B withEnglishContentLastUpdatedAt(final Instant englishContentLastUpdatedAt) {
        this.englishContentLastUpdatedAt = englishContentLastUpdatedAt;
        return (B) this;
    }


    public B withSpanishContentLastUpdatedAt(final Instant spanishContentLastUpdatedAt) {
        this.spanishContentLastUpdatedAt = spanishContentLastUpdatedAt;
        return (B) this;
    }

    public B withScoringEngine(final String scoringEngine) {
        this.scoringEngine = scoringEngine;
        return (B) this;
    }

    public B withAllowCalculator(final String allowCalculator) {
        this.allowCalculator = allowCalculator;
        return (B) this;
    }

    public B withAslUploadedPriorToLastContentUpdate(final boolean aslUploadedPriorToLastContentUpdate) {
        this.aslUploadedPriorToLastContentUpdate = aslUploadedPriorToLastContentUpdate;
        return (B) this;
    }

    public B withBrailleUploadedPriorToLastContentUpdate(final boolean brailleUploadedPriorToLastContentUpdate) {
        this.brailleUploadedPriorToLastContentUpdate = brailleUploadedPriorToLastContentUpdate;
        return (B) this;
    }

    public B withClosedCaptioningUploadedPriorToLastContentUpdate(final boolean closedCaptioningUploadedPriorToLastContentUpdate) {
        this.closedCaptioningUploadedPriorToLastContentUpdate = closedCaptioningUploadedPriorToLastContentUpdate;
        return (B) this;
    }

    public B withEnglishPassagesCount(final int englishPassagesCount) {
        this.englishPassagesCount = englishPassagesCount;
        return (B) this;
    }

    public B withSpanishPassagesCount(final int spanishPassagesCount) {
        this.spanishPassagesCount = spanishPassagesCount;
        return (B) this;
    }

    public B withDateStatusSetToOperational(final Instant dateStatusSetToOperational) {
        this.dateStatusSetToOperational = dateStatusSetToOperational;
        return (B) this;
    }

    public B withContentChangedAfterOperational(final boolean contentChangedAfterOperational) {
        this.contentChangedAfterOperational = contentChangedAfterOperational;
        return (B) this;
    }

    public B withUnresolvedUpdateNeed(final boolean unresolvedUpdateNeed) {
        this.unresolvedUpdateNeed = unresolvedUpdateNeed;
        return (B) this;
    }

    public B withCurrentUpdateNeedCreateDate(final Instant currentUpdateNeedCreateDate) {
        this.currentUpdateNeedCreateDate = currentUpdateNeedCreateDate;
        return (B) this;
    }

    public B withCurrentUpdateNeedResolutionDate(final Instant currentUpdateNeedResolutionDate) {
        this.currentUpdateNeedResolutionDate = currentUpdateNeedResolutionDate;
        return (B) this;
    }

    public B withCurrentUpdateNeedInternalResolutionDate(final Instant currentUpdateNeedInternalResolutionDate) {
        this.currentUpdateNeedInternalResolutionDate = currentUpdateNeedInternalResolutionDate;
        return (B) this;
    }

    public B withCurrentUpdateNeedResolution(final String currentUpdateNeedResolution) {
        this.currentUpdateNeedResolution = currentUpdateNeedResolution;
        return (B) this;
    }

    public B withCurrentUpdateNeedInternalResolution(final String currentUpdateNeedInternalResolution) {
        this.currentUpdateNeedInternalResolution = currentUpdateNeedInternalResolution;
        return (B) this;
    }

    T build(T item) {
        super.build(item);
        item.setKey(key);
        item.setSubject(subject);
        item.setGrade(grade);
        item.setId(id);
        item.setWorkflowStatus(workflowStatus);
        item.setItemType(itemType);
        item.setDepthOfKnowledge(depthOfKnowledge);
        item.setItemCreatedBy(itemCreatedBy);
        item.setItemCreatedAt(itemCreatedAt);
        item.setItemJson(itemJson);
        item.setAssociatedStimulusId(associatedStimulusId);
        item.setWorkflowStatusSetAt(workflowStatusSetAt);
        item.setOrganizationTypeId(organizationTypeId);
        item.setOrganizationName(organizationName);
        item.setBeingCreated(isBeingCreated);
        item.setPrimaryClaim(primaryClaim);
        item.setPrimaryCommonCoreStandard(primaryCommonCoreStandard);
        item.setPrimaryContentDomain(primaryContentDomain);
        item.setPrimaryTarget(primaryTarget);
        item.setSecondaryClaim(secondaryClaim);
        item.setSecondaryCommonCoreStandard(secondaryCommonCoreStandard);
        item.setSecondaryContentDomain(secondaryContentDomain);
        item.setSecondaryTarget(secondaryTarget);
        item.setTertiaryClaim(tertiaryClaim);
        item.setTertiaryCommonCoreStandard(tertiaryCommonCoreStandard);
        item.setTertiaryContentDomain(tertiaryContentDomain);
        item.setTertiaryTarget(tertiaryTarget);
        item.setQuaternaryClaim(quaternaryClaim);
        item.setQuaternaryCommonCoreStandard(quaternaryCommonCoreStandard);
        item.setQuaternaryContentDomain(quaternaryContentDomain);
        item.setQuaternaryTarget(quaternaryTarget);
        item.setContentTaskModel(contentTaskModel);
        item.setItemAuthor(itemAuthor);
        item.setAslRequired(aslRequired);
        item.setAslProvided(aslProvided);
        item.setBrailleRequired(brailleRequired);
        item.setBrailleProvided(brailleProvided);
        item.setCcRequired(ccRequired);
        item.setCcProvided(ccProvided);
        item.setTranslationRequired(translationRequired);
        item.setTranslationProvided(translationProvided);
        item.setAttachments(attachments);
        item.setItemDifficultyQuintile(itemDifficultyQuintile);
        item.setExposuresCount(exposuresCount);
        item.setWritingPurpose(writingPurpose);
        item.setPerformanceTask(performanceTask);
        item.setSightTtsProvided(isSightTtsProvided);
        item.setVisualTtsProvided(isVisualTtsProvided);
        item.setVisualTtsRequired(visualTtsRequired);
        item.setForms(forms);
        item.setTestCategory(testCategory);
        item.setEnglishContentLastUpdatedAt(englishContentLastUpdatedAt);
        item.setSpanishContentLastUpdatedAt(spanishContentLastUpdatedAt);
        item.setScoringEngine(scoringEngine);
        item.setAllowCalculator(allowCalculator);
        item.setAslUploadedPriorToLastContentUpdate(aslUploadedPriorToLastContentUpdate);
        item.setBrailleUploadedPriorToLastContentUpdate(brailleUploadedPriorToLastContentUpdate);
        item.setClosedCaptioningUploadedPriorToLastContentUpdate(closedCaptioningUploadedPriorToLastContentUpdate);
        item.setEnglishPassagesCount(englishPassagesCount);
        item.setSpanishPassagesCount(spanishPassagesCount);
        item.setDateStatusSetToOperational(dateStatusSetToOperational);
        item.setContentChangedAfterOperational(contentChangedAfterOperational);
        item.setCurrentUpdateNeedCreateDate(currentUpdateNeedCreateDate);
        item.setCurrentUpdateNeedInternalResolution(currentUpdateNeedInternalResolution);
        item.setCurrentUpdateNeedInternalResolutionDate(currentUpdateNeedInternalResolutionDate);
        item.setCurrentUpdateNeedResolution(currentUpdateNeedResolution);
        item.setCurrentUpdateNeedResolutionDate(currentUpdateNeedResolutionDate);
        item.setUnresolvedUpdateNeed(unresolvedUpdateNeed);

        return item;
    }
}